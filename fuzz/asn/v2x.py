# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class MsgFrame:

    _name_  = 'MsgFrame'
    _oid_   = []
    
    _obj_ = [
        'MessageFrame',
        'BasicSafetyMessage',
        'MsgCount',
        'AccelerationSet4Way',
        'Acceleration',
        'VerticalAcceleration',
        'YawRate',
        'Speed',
        'Heading',
        'CoarseHeading',
        'SteeringWheelAngle',
        'MotionConfidenceSet',
        'HeadingConfidence',
        'SpeedConfidence',
        'SteeringWheelAngleConfidence',
        'Latitude',
        'Longitude',
        'Elevation',
        'PositionConfidenceSet',
        'PositionConfidence',
        'ElevationConfidence',
        'Position3D',
        'SemiMajorAxisAccuracy',
        'SemiMinorAxisAccuracy',
        'SemiMajorAxisOrientation',
        'PositionalAccuracy',
        'PositionOffsetLLV',
        'OffsetLL-B12',
        'OffsetLL-B14',
        'OffsetLL-B16',
        'OffsetLL-B18',
        'OffsetLL-B22',
        'OffsetLL-B24',
        'Position-LL-24B',
        'Position-LL-28B',
        'Position-LL-32B',
        'Position-LL-36B',
        'Position-LL-44B',
        'Position-LL-48B',
        'Position-LLmD-64b',
        'PositionOffsetLL',
        'VerticalOffset',
        'VertOffset-B07',
        'VertOffset-B08',
        'VertOffset-B09',
        'VertOffset-B10',
        'VertOffset-B11',
        'VertOffset-B12',
        'DSecond',
        'DYear',
        'DMonth',
        'DDay',
        'DHour',
        'DMinute',
        'DTimeOffset',
        'DDateTime',
        'MinuteOfTheYear',
        'TimeMark',
        'TimeOffset',
        'TimeConfidence',
        'MapData',
        'LaneList',
        'Lane',
        'LaneID',
        'LaneWidth',
        'ConnectsToList',
        'Connection',
        'ConnectingLane',
        'AllowedManeuvers',
        'LaneAttributes',
        'LaneSharing',
        'LaneTypeAttributes',
        'LaneAttributes-Vehicle',
        'LaneAttributes-Crosswalk',
        'LaneAttributes-Bike',
        'LaneAttributes-Sidewalk',
        'LaneAttributes-Barrier',
        'LaneAttributes-Striping',
        'LaneAttributes-TrackedVehicle',
        'LaneAttributes-Parking',
        'LinkList',
        'Link',
        'MovementList',
        'Movement',
        'NodeList',
        'Node',
        'DescriptiveName',
        'NodeReferenceID',
        'RoadRegulatorID',
        'NodeID',
        'PointList',
        'RoadPoint',
        'SpeedLimitList',
        'RegulatorySpeedLimit',
        'SpeedLimitType',
        'RoadSideInformation',
        'RTEList',
        'RTEData',
        'EventSource',
        'EventType',
        'RSITimeDetails',
        'ReferencePathList',
        'ReferencePath',
        'RTSList',
        'RTSData',
        'Description',
        'ReferenceLinkList',
        'ReferenceLink',
        'ReferenceLanes',
        'SignType',
        'PathPointList',
        'Radius',
        'RSIPriority',
        'RoadsideSafetyMessage',
        'ParticipantList',
        'ParticipantData',
        'ParticipantType',
        'SourceType',
        'SPAT',
        'IntersectionStateList',
        'IntersectionState',
        'IntersectionStatusObject',
        'PhaseList',
        'Phase',
        'PhaseStateList',
        'PhaseState',
        'LightState',
        'TimeChangeDetails',
        'UTCTiming',
        'TimeCountingDown',
        'PhaseID',
        'BrakeSystemStatus',
        'BrakePedalStatus',
        'BrakeAppliedStatus',
        'BrakeBoostApplied',
        'TractionControlStatus',
        'AntiLockBrakeStatus',
        'StabilityControlStatus',
        'AuxiliaryBrakeStatus',
        'VehicleClassification',
        'BasicVehicleClass',
        'unknownVehicleClass',
        'specialVehicleClass',
        'passenger-Vehicle-TypeUnknown',
        'passenger-Vehicle-TypeOther',
        'lightTruck-Vehicle-TypeUnknown',
        'lightTruck-Vehicle-TypeOther',
        'truck-Vehicle-TypeUnknown',
        'truck-Vehicle-TypeOther',
        'truck-axleCnt2',
        'truck-axleCnt3',
        'truck-axleCnt4',
        'truck-axleCnt4Trailer',
        'truck-axleCnt5Trailer',
        'truck-axleCnt6Trailer',
        'truck-axleCnt5MultiTrailer',
        'truck-axleCnt6MultiTrailer',
        'truck-axleCnt7MultiTrailer',
        'motorcycle-TypeUnknown',
        'motorcycle-TypeOther',
        'motorcycle-Cruiser-Standard',
        'motorcycle-SportUnclad',
        'motorcycle-SportTouring',
        'motorcycle-SuperSport',
        'motorcycle-Touring',
        'motorcycle-Trike',
        'motorcycle-wPassengers',
        'transit-TypeUnknown',
        'transit-TypeOther',
        'transit-BRT',
        'transit-ExpressBus',
        'transit-LocalBus',
        'transit-SchoolBus',
        'transit-FixedGuideway',
        'transit-Paratransit',
        'transit-Paratransit-Ambulance',
        'emergency-TypeUnknown',
        'emergency-TypeOther',
        'emergency-Fire-Light-Vehicle',
        'emergency-Fire-Heavy-Vehicle',
        'emergency-Fire-Paramedic-Vehicle',
        'emergency-Fire-Ambulance-Vehicle',
        'emergency-Police-Light-Vehicle',
        'emergency-Police-Heavy-Vehicle',
        'emergency-Other-Responder',
        'emergency-Other-Ambulance',
        'otherTraveler-TypeUnknown',
        'otherTraveler-TypeOther',
        'otherTraveler-Pedestrian',
        'otherTraveler-Visually-Disabled',
        'otherTraveler-Physically-Disabled',
        'otherTraveler-Bicycle',
        'otherTraveler-Vulnerable-Roadworker',
        'infrastructure-TypeUnknown',
        'infrastructure-Fixed',
        'infrastructure-Movable',
        'equipped-CargoTrailer',
        'FuelType',
        'unknownFuel',
        'gasoline',
        'ethanol',
        'diesel',
        'electric',
        'hybrid',
        'hydrogen',
        'natGasLiquid',
        'natGasComp',
        'propane',
        'VehicleEmergencyExtensions',
        'ResponseType',
        'SirenInUse',
        'LightbarInUse',
        'VehicleSafetyExtensions',
        'PathHistory',
        'FullPositionVector',
        'GNSSstatus',
        'PathHistoryPointList',
        'PathHistoryPoint',
        'PathPrediction',
        'Confidence',
        'RadiusOfCurvature',
        'VehicleSize',
        'VehicleWidth',
        'VehicleLength',
        'VehicleHeight',
        'TransmissionState',
        'VehicleEventFlags',
        'ExteriorLights',
        ]
    _type_ = [
        'MessageFrame',
        'BasicSafetyMessage',
        'MsgCount',
        'AccelerationSet4Way',
        'Acceleration',
        'VerticalAcceleration',
        'YawRate',
        'Speed',
        'Heading',
        'CoarseHeading',
        'SteeringWheelAngle',
        'MotionConfidenceSet',
        'HeadingConfidence',
        'SpeedConfidence',
        'SteeringWheelAngleConfidence',
        'Latitude',
        'Longitude',
        'Elevation',
        'PositionConfidenceSet',
        'PositionConfidence',
        'ElevationConfidence',
        'Position3D',
        'SemiMajorAxisAccuracy',
        'SemiMinorAxisAccuracy',
        'SemiMajorAxisOrientation',
        'PositionalAccuracy',
        'PositionOffsetLLV',
        'OffsetLL-B12',
        'OffsetLL-B14',
        'OffsetLL-B16',
        'OffsetLL-B18',
        'OffsetLL-B22',
        'OffsetLL-B24',
        'Position-LL-24B',
        'Position-LL-28B',
        'Position-LL-32B',
        'Position-LL-36B',
        'Position-LL-44B',
        'Position-LL-48B',
        'Position-LLmD-64b',
        'PositionOffsetLL',
        'VerticalOffset',
        'VertOffset-B07',
        'VertOffset-B08',
        'VertOffset-B09',
        'VertOffset-B10',
        'VertOffset-B11',
        'VertOffset-B12',
        'DSecond',
        'DYear',
        'DMonth',
        'DDay',
        'DHour',
        'DMinute',
        'DTimeOffset',
        'DDateTime',
        'MinuteOfTheYear',
        'TimeMark',
        'TimeOffset',
        'TimeConfidence',
        'MapData',
        'LaneList',
        'Lane',
        'LaneID',
        'LaneWidth',
        'ConnectsToList',
        'Connection',
        'ConnectingLane',
        'AllowedManeuvers',
        'LaneAttributes',
        'LaneSharing',
        'LaneTypeAttributes',
        'LaneAttributes-Vehicle',
        'LaneAttributes-Crosswalk',
        'LaneAttributes-Bike',
        'LaneAttributes-Sidewalk',
        'LaneAttributes-Barrier',
        'LaneAttributes-Striping',
        'LaneAttributes-TrackedVehicle',
        'LaneAttributes-Parking',
        'LinkList',
        'Link',
        'MovementList',
        'Movement',
        'NodeList',
        'Node',
        'DescriptiveName',
        'NodeReferenceID',
        'RoadRegulatorID',
        'NodeID',
        'PointList',
        'RoadPoint',
        'SpeedLimitList',
        'RegulatorySpeedLimit',
        'SpeedLimitType',
        'RoadSideInformation',
        'RTEList',
        'RTEData',
        'EventSource',
        'EventType',
        'RSITimeDetails',
        'ReferencePathList',
        'ReferencePath',
        'RTSList',
        'RTSData',
        'Description',
        'ReferenceLinkList',
        'ReferenceLink',
        'ReferenceLanes',
        'SignType',
        'PathPointList',
        'Radius',
        'RSIPriority',
        'RoadsideSafetyMessage',
        'ParticipantList',
        'ParticipantData',
        'ParticipantType',
        'SourceType',
        'SPAT',
        'IntersectionStateList',
        'IntersectionState',
        'IntersectionStatusObject',
        'PhaseList',
        'Phase',
        'PhaseStateList',
        'PhaseState',
        'LightState',
        'TimeChangeDetails',
        'UTCTiming',
        'TimeCountingDown',
        'PhaseID',
        'BrakeSystemStatus',
        'BrakePedalStatus',
        'BrakeAppliedStatus',
        'BrakeBoostApplied',
        'TractionControlStatus',
        'AntiLockBrakeStatus',
        'StabilityControlStatus',
        'AuxiliaryBrakeStatus',
        'VehicleClassification',
        'BasicVehicleClass',
        'FuelType',
        'VehicleEmergencyExtensions',
        'ResponseType',
        'SirenInUse',
        'LightbarInUse',
        'VehicleSafetyExtensions',
        'PathHistory',
        'FullPositionVector',
        'GNSSstatus',
        'PathHistoryPointList',
        'PathHistoryPoint',
        'PathPrediction',
        'Confidence',
        'RadiusOfCurvature',
        'VehicleSize',
        'VehicleWidth',
        'VehicleLength',
        'VehicleHeight',
        'TransmissionState',
        'VehicleEventFlags',
        'ExteriorLights',
        ]
    _set_ = [
        ]
    _val_ = [
        'unknownVehicleClass',
        'specialVehicleClass',
        'passenger-Vehicle-TypeUnknown',
        'passenger-Vehicle-TypeOther',
        'lightTruck-Vehicle-TypeUnknown',
        'lightTruck-Vehicle-TypeOther',
        'truck-Vehicle-TypeUnknown',
        'truck-Vehicle-TypeOther',
        'truck-axleCnt2',
        'truck-axleCnt3',
        'truck-axleCnt4',
        'truck-axleCnt4Trailer',
        'truck-axleCnt5Trailer',
        'truck-axleCnt6Trailer',
        'truck-axleCnt5MultiTrailer',
        'truck-axleCnt6MultiTrailer',
        'truck-axleCnt7MultiTrailer',
        'motorcycle-TypeUnknown',
        'motorcycle-TypeOther',
        'motorcycle-Cruiser-Standard',
        'motorcycle-SportUnclad',
        'motorcycle-SportTouring',
        'motorcycle-SuperSport',
        'motorcycle-Touring',
        'motorcycle-Trike',
        'motorcycle-wPassengers',
        'transit-TypeUnknown',
        'transit-TypeOther',
        'transit-BRT',
        'transit-ExpressBus',
        'transit-LocalBus',
        'transit-SchoolBus',
        'transit-FixedGuideway',
        'transit-Paratransit',
        'transit-Paratransit-Ambulance',
        'emergency-TypeUnknown',
        'emergency-TypeOther',
        'emergency-Fire-Light-Vehicle',
        'emergency-Fire-Heavy-Vehicle',
        'emergency-Fire-Paramedic-Vehicle',
        'emergency-Fire-Ambulance-Vehicle',
        'emergency-Police-Light-Vehicle',
        'emergency-Police-Heavy-Vehicle',
        'emergency-Other-Responder',
        'emergency-Other-Ambulance',
        'otherTraveler-TypeUnknown',
        'otherTraveler-TypeOther',
        'otherTraveler-Pedestrian',
        'otherTraveler-Visually-Disabled',
        'otherTraveler-Physically-Disabled',
        'otherTraveler-Bicycle',
        'otherTraveler-Vulnerable-Roadworker',
        'infrastructure-TypeUnknown',
        'infrastructure-Fixed',
        'infrastructure-Movable',
        'equipped-CargoTrailer',
        'unknownFuel',
        'gasoline',
        'ethanol',
        'diesel',
        'electric',
        'hybrid',
        'hydrogen',
        'natGasLiquid',
        'natGasComp',
        'propane',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< MessageFrame >-----#
    MessageFrame = CHOICE(name='MessageFrame', mode=MODE_TYPE)
    _MessageFrame_bsmFrame = SEQ(name='bsmFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'BasicSafetyMessage')))
    _MessageFrame_mapFrame = SEQ(name='mapFrame', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MapData')))
    _MessageFrame_rsmFrame = SEQ(name='rsmFrame', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RoadsideSafetyMessage')))
    _MessageFrame_spatFrame = SEQ(name='spatFrame', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SPAT')))
    _MessageFrame_rsiFrame = SEQ(name='rsiFrame', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RoadSideInformation')))
    MessageFrame._cont = ASN1Dict([
        ('bsmFrame', _MessageFrame_bsmFrame),
        ('mapFrame', _MessageFrame_mapFrame),
        ('rsmFrame', _MessageFrame_rsmFrame),
        ('spatFrame', _MessageFrame_spatFrame),
        ('rsiFrame', _MessageFrame_rsiFrame),
        ])
    MessageFrame._ext = []
    
    #-----< BasicSafetyMessage >-----#
    BasicSafetyMessage = SEQ(name='BasicSafetyMessage', mode=MODE_TYPE)
    _BasicSafetyMessage_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MsgCount')))
    _BasicSafetyMessage_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasicSafetyMessage_id._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _BasicSafetyMessage_secMark = INT(name='secMark', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DSecond')))
    _BasicSafetyMessage_timeConfidence = ENUM(name='timeConfidence', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeConfidence')), opt=True)
    _BasicSafetyMessage_pos = SEQ(name='pos', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position3D')))
    _BasicSafetyMessage_posAccuracy = SEQ(name='posAccuracy', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionalAccuracy')), opt=True)
    _BasicSafetyMessage_posConfidence = SEQ(name='posConfidence', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionConfidenceSet')), opt=True)
    _BasicSafetyMessage_transmission = ENUM(name='transmission', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TransmissionState')))
    _BasicSafetyMessage_speed = INT(name='speed', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Speed')))
    _BasicSafetyMessage_heading = INT(name='heading', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Heading')))
    _BasicSafetyMessage_angle = INT(name='angle', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SteeringWheelAngle')), opt=True)
    _BasicSafetyMessage_motionCfd = SEQ(name='motionCfd', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MotionConfidenceSet')), opt=True)
    _BasicSafetyMessage_accelSet = SEQ(name='accelSet', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'AccelerationSet4Way')))
    _BasicSafetyMessage_brakes = SEQ(name='brakes', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'BrakeSystemStatus')))
    _BasicSafetyMessage_size = SEQ(name='size', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleSize')))
    _BasicSafetyMessage_vehicleClass = SEQ(name='vehicleClass', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleClassification')))
    _BasicSafetyMessage_safetyExt = SEQ(name='safetyExt', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleSafetyExtensions')), opt=True)
    _BasicSafetyMessage_emergencyExt = SEQ(name='emergencyExt', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleEmergencyExtensions')), opt=True)
    BasicSafetyMessage._cont = ASN1Dict([
        ('msgCnt', _BasicSafetyMessage_msgCnt),
        ('id', _BasicSafetyMessage_id),
        ('secMark', _BasicSafetyMessage_secMark),
        ('timeConfidence', _BasicSafetyMessage_timeConfidence),
        ('pos', _BasicSafetyMessage_pos),
        ('posAccuracy', _BasicSafetyMessage_posAccuracy),
        ('posConfidence', _BasicSafetyMessage_posConfidence),
        ('transmission', _BasicSafetyMessage_transmission),
        ('speed', _BasicSafetyMessage_speed),
        ('heading', _BasicSafetyMessage_heading),
        ('angle', _BasicSafetyMessage_angle),
        ('motionCfd', _BasicSafetyMessage_motionCfd),
        ('accelSet', _BasicSafetyMessage_accelSet),
        ('brakes', _BasicSafetyMessage_brakes),
        ('size', _BasicSafetyMessage_size),
        ('vehicleClass', _BasicSafetyMessage_vehicleClass),
        ('safetyExt', _BasicSafetyMessage_safetyExt),
        ('emergencyExt', _BasicSafetyMessage_emergencyExt),
        ])
    BasicSafetyMessage._ext = []
    
    #-----< MsgCount >-----#
    MsgCount = INT(name='MsgCount', mode=MODE_TYPE)
    MsgCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< AccelerationSet4Way >-----#
    AccelerationSet4Way = SEQ(name='AccelerationSet4Way', mode=MODE_TYPE)
    _AccelerationSet4Way_long = INT(name='long', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Acceleration')))
    _AccelerationSet4Way_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Acceleration')))
    _AccelerationSet4Way_vert = INT(name='vert', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VerticalAcceleration')))
    _AccelerationSet4Way_yaw = INT(name='yaw', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'YawRate')))
    AccelerationSet4Way._cont = ASN1Dict([
        ('long', _AccelerationSet4Way_long),
        ('lat', _AccelerationSet4Way_lat),
        ('vert', _AccelerationSet4Way_vert),
        ('yaw', _AccelerationSet4Way_yaw),
        ])
    AccelerationSet4Way._ext = None
    
    #-----< Acceleration >-----#
    Acceleration = INT(name='Acceleration', mode=MODE_TYPE)
    Acceleration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2000, ub=2001)], ev=None, er=[])
    
    #-----< VerticalAcceleration >-----#
    VerticalAcceleration = INT(name='VerticalAcceleration', mode=MODE_TYPE)
    VerticalAcceleration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    
    #-----< YawRate >-----#
    YawRate = INT(name='YawRate', mode=MODE_TYPE)
    YawRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    
    #-----< Speed >-----#
    Speed = INT(name='Speed', mode=MODE_TYPE)
    Speed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    
    #-----< Heading >-----#
    Heading = INT(name='Heading', mode=MODE_TYPE)
    Heading._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=28800)], ev=None, er=[])
    
    #-----< CoarseHeading >-----#
    CoarseHeading = INT(name='CoarseHeading', mode=MODE_TYPE)
    CoarseHeading._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=240)], ev=None, er=[])
    
    #-----< SteeringWheelAngle >-----#
    SteeringWheelAngle = INT(name='SteeringWheelAngle', mode=MODE_TYPE)
    SteeringWheelAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-126, ub=127)], ev=None, er=[])
    
    #-----< MotionConfidenceSet >-----#
    MotionConfidenceSet = SEQ(name='MotionConfidenceSet', mode=MODE_TYPE)
    _MotionConfidenceSet_speedCfd = ENUM(name='speedCfd', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SpeedConfidence')), opt=True)
    _MotionConfidenceSet_headingCfd = ENUM(name='headingCfd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'HeadingConfidence')), opt=True)
    _MotionConfidenceSet_steerCfd = ENUM(name='steerCfd', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SteeringWheelAngleConfidence')), opt=True)
    MotionConfidenceSet._cont = ASN1Dict([
        ('speedCfd', _MotionConfidenceSet_speedCfd),
        ('headingCfd', _MotionConfidenceSet_headingCfd),
        ('steerCfd', _MotionConfidenceSet_steerCfd),
        ])
    MotionConfidenceSet._ext = None
    
    #-----< HeadingConfidence >-----#
    HeadingConfidence = ENUM(name='HeadingConfidence', mode=MODE_TYPE)
    HeadingConfidence._cont = ASN1Dict([('unavailable', 0), ('prec10deg', 1), ('prec05deg', 2), ('prec01deg', 3), ('prec0-1deg', 4), ('prec0-05deg', 5), ('prec0-01deg', 6), ('prec0-0125deg', 7)])
    HeadingConfidence._ext = None
    
    #-----< SpeedConfidence >-----#
    SpeedConfidence = ENUM(name='SpeedConfidence', mode=MODE_TYPE)
    SpeedConfidence._cont = ASN1Dict([('unavailable', 0), ('prec100ms', 1), ('prec10ms', 2), ('prec5ms', 3), ('prec1ms', 4), ('prec0-1ms', 5), ('prec0-05ms', 6), ('prec0-01ms', 7)])
    SpeedConfidence._ext = None
    
    #-----< SteeringWheelAngleConfidence >-----#
    SteeringWheelAngleConfidence = ENUM(name='SteeringWheelAngleConfidence', mode=MODE_TYPE)
    SteeringWheelAngleConfidence._cont = ASN1Dict([('unavailable', 0), ('prec2deg', 1), ('prec1deg', 2), ('prec0-02deg', 3)])
    SteeringWheelAngleConfidence._ext = None
    
    #-----< Latitude >-----#
    Latitude = INT(name='Latitude', mode=MODE_TYPE)
    Latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-900000000, ub=900000001)], ev=None, er=[])
    
    #-----< Longitude >-----#
    Longitude = INT(name='Longitude', mode=MODE_TYPE)
    Longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1799999999, ub=1800000001)], ev=None, er=[])
    
    #-----< Elevation >-----#
    Elevation = INT(name='Elevation', mode=MODE_TYPE)
    Elevation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=61439)], ev=None, er=[])
    
    #-----< PositionConfidenceSet >-----#
    PositionConfidenceSet = SEQ(name='PositionConfidenceSet', mode=MODE_TYPE)
    _PositionConfidenceSet_pos = ENUM(name='pos', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionConfidence')))
    _PositionConfidenceSet_elevation = ENUM(name='elevation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ElevationConfidence')), opt=True)
    PositionConfidenceSet._cont = ASN1Dict([
        ('pos', _PositionConfidenceSet_pos),
        ('elevation', _PositionConfidenceSet_elevation),
        ])
    PositionConfidenceSet._ext = None
    
    #-----< PositionConfidence >-----#
    PositionConfidence = ENUM(name='PositionConfidence', mode=MODE_TYPE)
    PositionConfidence._cont = ASN1Dict([('unavailable', 0), ('a500m', 1), ('a200m', 2), ('a100m', 3), ('a50m', 4), ('a20m', 5), ('a10m', 6), ('a5m', 7), ('a2m', 8), ('a1m', 9), ('a50cm', 10), ('a20cm', 11), ('a10cm', 12), ('a5cm', 13), ('a2cm', 14), ('a1cm', 15)])
    PositionConfidence._ext = None
    
    #-----< ElevationConfidence >-----#
    ElevationConfidence = ENUM(name='ElevationConfidence', mode=MODE_TYPE)
    ElevationConfidence._cont = ASN1Dict([('unavailable', 0), ('elev-500-00', 1), ('elev-200-00', 2), ('elev-100-00', 3), ('elev-050-00', 4), ('elev-020-00', 5), ('elev-010-00', 6), ('elev-005-00', 7), ('elev-002-00', 8), ('elev-001-00', 9), ('elev-000-50', 10), ('elev-000-20', 11), ('elev-000-10', 12), ('elev-000-05', 13), ('elev-000-02', 14), ('elev-000-01', 15)])
    ElevationConfidence._ext = None
    
    #-----< Position3D >-----#
    Position3D = SEQ(name='Position3D', mode=MODE_TYPE)
    _Position3D_lat = INT(name='lat', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Latitude')))
    _Position3D_long = INT(name='long', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Longitude')))
    _Position3D_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Elevation')), opt=True)
    Position3D._cont = ASN1Dict([
        ('lat', _Position3D_lat),
        ('long', _Position3D_long),
        ('elevation', _Position3D_elevation),
        ])
    Position3D._ext = None
    
    #-----< SemiMajorAxisAccuracy >-----#
    SemiMajorAxisAccuracy = INT(name='SemiMajorAxisAccuracy', mode=MODE_TYPE)
    SemiMajorAxisAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SemiMinorAxisAccuracy >-----#
    SemiMinorAxisAccuracy = INT(name='SemiMinorAxisAccuracy', mode=MODE_TYPE)
    SemiMinorAxisAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SemiMajorAxisOrientation >-----#
    SemiMajorAxisOrientation = INT(name='SemiMajorAxisOrientation', mode=MODE_TYPE)
    SemiMajorAxisOrientation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< PositionalAccuracy >-----#
    PositionalAccuracy = SEQ(name='PositionalAccuracy', mode=MODE_TYPE)
    _PositionalAccuracy_semiMajor = INT(name='semiMajor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SemiMajorAxisAccuracy')))
    _PositionalAccuracy_semiMinor = INT(name='semiMinor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SemiMinorAxisAccuracy')))
    _PositionalAccuracy_orientation = INT(name='orientation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SemiMajorAxisOrientation')))
    PositionalAccuracy._cont = ASN1Dict([
        ('semiMajor', _PositionalAccuracy_semiMajor),
        ('semiMinor', _PositionalAccuracy_semiMinor),
        ('orientation', _PositionalAccuracy_orientation),
        ])
    PositionalAccuracy._ext = None
    
    #-----< PositionOffsetLLV >-----#
    PositionOffsetLLV = SEQ(name='PositionOffsetLLV', mode=MODE_TYPE)
    _PositionOffsetLLV_offsetLL = CHOICE(name='offsetLL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLL')))
    _PositionOffsetLLV_offsetV = CHOICE(name='offsetV', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MsgFrame', 'VerticalOffset')), opt=True)
    PositionOffsetLLV._cont = ASN1Dict([
        ('offsetLL', _PositionOffsetLLV_offsetLL),
        ('offsetV', _PositionOffsetLLV_offsetV),
        ])
    PositionOffsetLLV._ext = None
    
    #-----< OffsetLL-B12 >-----#
    OffsetLL_B12 = INT(name='OffsetLL-B12', mode=MODE_TYPE)
    OffsetLL_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    
    #-----< OffsetLL-B14 >-----#
    OffsetLL_B14 = INT(name='OffsetLL-B14', mode=MODE_TYPE)
    OffsetLL_B14._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    
    #-----< OffsetLL-B16 >-----#
    OffsetLL_B16 = INT(name='OffsetLL-B16', mode=MODE_TYPE)
    OffsetLL_B16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    
    #-----< OffsetLL-B18 >-----#
    OffsetLL_B18 = INT(name='OffsetLL-B18', mode=MODE_TYPE)
    OffsetLL_B18._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    
    #-----< OffsetLL-B22 >-----#
    OffsetLL_B22 = INT(name='OffsetLL-B22', mode=MODE_TYPE)
    OffsetLL_B22._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    
    #-----< OffsetLL-B24 >-----#
    OffsetLL_B24 = INT(name='OffsetLL-B24', mode=MODE_TYPE)
    OffsetLL_B24._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    
    #-----< Position-LL-24B >-----#
    Position_LL_24B = SEQ(name='Position-LL-24B', mode=MODE_TYPE)
    _Position_LL_24B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B12')))
    _Position_LL_24B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B12')))
    Position_LL_24B._cont = ASN1Dict([
        ('lon', _Position_LL_24B_lon),
        ('lat', _Position_LL_24B_lat),
        ])
    Position_LL_24B._ext = None
    
    #-----< Position-LL-28B >-----#
    Position_LL_28B = SEQ(name='Position-LL-28B', mode=MODE_TYPE)
    _Position_LL_28B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B14')))
    _Position_LL_28B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B14')))
    Position_LL_28B._cont = ASN1Dict([
        ('lon', _Position_LL_28B_lon),
        ('lat', _Position_LL_28B_lat),
        ])
    Position_LL_28B._ext = None
    
    #-----< Position-LL-32B >-----#
    Position_LL_32B = SEQ(name='Position-LL-32B', mode=MODE_TYPE)
    _Position_LL_32B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B16')))
    _Position_LL_32B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B16')))
    Position_LL_32B._cont = ASN1Dict([
        ('lon', _Position_LL_32B_lon),
        ('lat', _Position_LL_32B_lat),
        ])
    Position_LL_32B._ext = None
    
    #-----< Position-LL-36B >-----#
    Position_LL_36B = SEQ(name='Position-LL-36B', mode=MODE_TYPE)
    _Position_LL_36B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B18')))
    _Position_LL_36B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B18')))
    Position_LL_36B._cont = ASN1Dict([
        ('lon', _Position_LL_36B_lon),
        ('lat', _Position_LL_36B_lat),
        ])
    Position_LL_36B._ext = None
    
    #-----< Position-LL-44B >-----#
    Position_LL_44B = SEQ(name='Position-LL-44B', mode=MODE_TYPE)
    _Position_LL_44B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B22')))
    _Position_LL_44B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B22')))
    Position_LL_44B._cont = ASN1Dict([
        ('lon', _Position_LL_44B_lon),
        ('lat', _Position_LL_44B_lat),
        ])
    Position_LL_44B._ext = None
    
    #-----< Position-LL-48B >-----#
    Position_LL_48B = SEQ(name='Position-LL-48B', mode=MODE_TYPE)
    _Position_LL_48B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B24')))
    _Position_LL_48B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'OffsetLL-B24')))
    Position_LL_48B._cont = ASN1Dict([
        ('lon', _Position_LL_48B_lon),
        ('lat', _Position_LL_48B_lat),
        ])
    Position_LL_48B._ext = None
    
    #-----< Position-LLmD-64b >-----#
    Position_LLmD_64b = SEQ(name='Position-LLmD-64b', mode=MODE_TYPE)
    _Position_LLmD_64b_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Longitude')))
    _Position_LLmD_64b_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Latitude')))
    Position_LLmD_64b._cont = ASN1Dict([
        ('lon', _Position_LLmD_64b_lon),
        ('lat', _Position_LLmD_64b_lat),
        ])
    Position_LLmD_64b._ext = None
    
    #-----< PositionOffsetLL >-----#
    PositionOffsetLL = CHOICE(name='PositionOffsetLL', mode=MODE_TYPE)
    _PositionOffsetLL_position_LL1 = SEQ(name='position-LL1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LL-24B')))
    _PositionOffsetLL_position_LL2 = SEQ(name='position-LL2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LL-28B')))
    _PositionOffsetLL_position_LL3 = SEQ(name='position-LL3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LL-32B')))
    _PositionOffsetLL_position_LL4 = SEQ(name='position-LL4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LL-36B')))
    _PositionOffsetLL_position_LL5 = SEQ(name='position-LL5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LL-44B')))
    _PositionOffsetLL_position_LL6 = SEQ(name='position-LL6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LL-48B')))
    _PositionOffsetLL_position_LatLon = SEQ(name='position-LatLon', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position-LLmD-64b')))
    PositionOffsetLL._cont = ASN1Dict([
        ('position-LL1', _PositionOffsetLL_position_LL1),
        ('position-LL2', _PositionOffsetLL_position_LL2),
        ('position-LL3', _PositionOffsetLL_position_LL3),
        ('position-LL4', _PositionOffsetLL_position_LL4),
        ('position-LL5', _PositionOffsetLL_position_LL5),
        ('position-LL6', _PositionOffsetLL_position_LL6),
        ('position-LatLon', _PositionOffsetLL_position_LatLon),
        ])
    PositionOffsetLL._ext = None
    
    #-----< VerticalOffset >-----#
    VerticalOffset = CHOICE(name='VerticalOffset', mode=MODE_TYPE)
    _VerticalOffset_offset1 = INT(name='offset1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VertOffset-B07')))
    _VerticalOffset_offset2 = INT(name='offset2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VertOffset-B08')))
    _VerticalOffset_offset3 = INT(name='offset3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VertOffset-B09')))
    _VerticalOffset_offset4 = INT(name='offset4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VertOffset-B10')))
    _VerticalOffset_offset5 = INT(name='offset5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VertOffset-B11')))
    _VerticalOffset_offset6 = INT(name='offset6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VertOffset-B12')))
    _VerticalOffset_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Elevation')))
    VerticalOffset._cont = ASN1Dict([
        ('offset1', _VerticalOffset_offset1),
        ('offset2', _VerticalOffset_offset2),
        ('offset3', _VerticalOffset_offset3),
        ('offset4', _VerticalOffset_offset4),
        ('offset5', _VerticalOffset_offset5),
        ('offset6', _VerticalOffset_offset6),
        ('elevation', _VerticalOffset_elevation),
        ])
    VerticalOffset._ext = None
    
    #-----< VertOffset-B07 >-----#
    VertOffset_B07 = INT(name='VertOffset-B07', mode=MODE_TYPE)
    VertOffset_B07._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    
    #-----< VertOffset-B08 >-----#
    VertOffset_B08 = INT(name='VertOffset-B08', mode=MODE_TYPE)
    VertOffset_B08._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    
    #-----< VertOffset-B09 >-----#
    VertOffset_B09 = INT(name='VertOffset-B09', mode=MODE_TYPE)
    VertOffset_B09._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-256, ub=255)], ev=None, er=[])
    
    #-----< VertOffset-B10 >-----#
    VertOffset_B10 = INT(name='VertOffset-B10', mode=MODE_TYPE)
    VertOffset_B10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    
    #-----< VertOffset-B11 >-----#
    VertOffset_B11 = INT(name='VertOffset-B11', mode=MODE_TYPE)
    VertOffset_B11._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    
    #-----< VertOffset-B12 >-----#
    VertOffset_B12 = INT(name='VertOffset-B12', mode=MODE_TYPE)
    VertOffset_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    
    #-----< DSecond >-----#
    DSecond = INT(name='DSecond', mode=MODE_TYPE)
    DSecond._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< DYear >-----#
    DYear = INT(name='DYear', mode=MODE_TYPE)
    DYear._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< DMonth >-----#
    DMonth = INT(name='DMonth', mode=MODE_TYPE)
    DMonth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=12)], ev=None, er=[])
    
    #-----< DDay >-----#
    DDay = INT(name='DDay', mode=MODE_TYPE)
    DDay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< DHour >-----#
    DHour = INT(name='DHour', mode=MODE_TYPE)
    DHour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< DMinute >-----#
    DMinute = INT(name='DMinute', mode=MODE_TYPE)
    DMinute._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=60)], ev=None, er=[])
    
    #-----< DTimeOffset >-----#
    DTimeOffset = INT(name='DTimeOffset', mode=MODE_TYPE)
    DTimeOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-840, ub=840)], ev=None, er=[])
    
    #-----< DDateTime >-----#
    DDateTime = SEQ(name='DDateTime', mode=MODE_TYPE)
    _DDateTime_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DYear')), opt=True)
    _DDateTime_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DMonth')), opt=True)
    _DDateTime_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DDay')), opt=True)
    _DDateTime_hour = INT(name='hour', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DHour')), opt=True)
    _DDateTime_minute = INT(name='minute', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DMinute')), opt=True)
    _DDateTime_second = INT(name='second', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DSecond')), opt=True)
    _DDateTime_offset = INT(name='offset', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DTimeOffset')), opt=True)
    DDateTime._cont = ASN1Dict([
        ('year', _DDateTime_year),
        ('month', _DDateTime_month),
        ('day', _DDateTime_day),
        ('hour', _DDateTime_hour),
        ('minute', _DDateTime_minute),
        ('second', _DDateTime_second),
        ('offset', _DDateTime_offset),
        ])
    DDateTime._ext = None
    
    #-----< MinuteOfTheYear >-----#
    MinuteOfTheYear = INT(name='MinuteOfTheYear', mode=MODE_TYPE)
    MinuteOfTheYear._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=527040)], ev=None, er=[])
    
    #-----< TimeMark >-----#
    TimeMark = INT(name='TimeMark', mode=MODE_TYPE)
    TimeMark._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=36001)], ev=None, er=[])
    
    #-----< TimeOffset >-----#
    TimeOffset = INT(name='TimeOffset', mode=MODE_TYPE)
    TimeOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65535)], ev=None, er=[])
    
    #-----< TimeConfidence >-----#
    TimeConfidence = ENUM(name='TimeConfidence', mode=MODE_TYPE)
    TimeConfidence._cont = ASN1Dict([('unavailable', 0), ('time-100-000', 1), ('time-050-000', 2), ('time-020-000', 3), ('time-010-000', 4), ('time-002-000', 5), ('time-001-000', 6), ('time-000-500', 7), ('time-000-200', 8), ('time-000-100', 9), ('time-000-050', 10), ('time-000-020', 11), ('time-000-010', 12), ('time-000-005', 13), ('time-000-002', 14), ('time-000-001', 15), ('time-000-000-5', 16), ('time-000-000-2', 17), ('time-000-000-1', 18), ('time-000-000-05', 19), ('time-000-000-02', 20), ('time-000-000-01', 21), ('time-000-000-005', 22), ('time-000-000-002', 23), ('time-000-000-001', 24), ('time-000-000-000-5', 25), ('time-000-000-000-2', 26), ('time-000-000-000-1', 27), ('time-000-000-000-05', 28), ('time-000-000-000-02', 29), ('time-000-000-000-01', 30), ('time-000-000-000-005', 31), ('time-000-000-000-002', 32), ('time-000-000-000-001', 33), ('time-000-000-000-000-5', 34), ('time-000-000-000-000-2', 35), ('time-000-000-000-000-1', 36), ('time-000-000-000-000-05', 37), ('time-000-000-000-000-02', 38), ('time-000-000-000-000-01', 39)])
    TimeConfidence._ext = None
    
    #-----< MapData >-----#
    MapData = SEQ(name='MapData', mode=MODE_TYPE)
    _MapData_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MsgCount')))
    _MapData_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MinuteOfTheYear')), opt=True)
    _MapData_nodes = SEQ_OF(name='nodes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeList')))
    MapData._cont = ASN1Dict([
        ('msgCnt', _MapData_msgCnt),
        ('timeStamp', _MapData_timeStamp),
        ('nodes', _MapData_nodes),
        ])
    MapData._ext = []
    
    #-----< LaneList >-----#
    LaneList = SEQ_OF(name='LaneList', mode=MODE_TYPE)
    _LaneList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'Lane')))
    LaneList._cont = _LaneList__item_
    LaneList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Lane >-----#
    Lane = SEQ(name='Lane', mode=MODE_TYPE)
    _Lane_laneID = INT(name='laneID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneID')))
    _Lane_laneWidth = INT(name='laneWidth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneWidth')), opt=True)
    _Lane_laneAttributes = SEQ(name='laneAttributes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes')), opt=True)
    _Lane_maneuvers = BIT_STR(name='maneuvers', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'AllowedManeuvers')), opt=True)
    _Lane_connectsTo = SEQ_OF(name='connectsTo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ConnectsToList')), opt=True)
    _Lane_speedLimits = SEQ_OF(name='speedLimits', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SpeedLimitList')), opt=True)
    _Lane_points = SEQ_OF(name='points', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PointList')), opt=True)
    Lane._cont = ASN1Dict([
        ('laneID', _Lane_laneID),
        ('laneWidth', _Lane_laneWidth),
        ('laneAttributes', _Lane_laneAttributes),
        ('maneuvers', _Lane_maneuvers),
        ('connectsTo', _Lane_connectsTo),
        ('speedLimits', _Lane_speedLimits),
        ('points', _Lane_points),
        ])
    Lane._ext = []
    
    #-----< LaneID >-----#
    LaneID = INT(name='LaneID', mode=MODE_TYPE)
    LaneID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< LaneWidth >-----#
    LaneWidth = INT(name='LaneWidth', mode=MODE_TYPE)
    LaneWidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< ConnectsToList >-----#
    ConnectsToList = SEQ_OF(name='ConnectsToList', mode=MODE_TYPE)
    _ConnectsToList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'Connection')))
    ConnectsToList._cont = _ConnectsToList__item_
    ConnectsToList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< Connection >-----#
    Connection = SEQ(name='Connection', mode=MODE_TYPE)
    _Connection_remoteIntersection = SEQ(name='remoteIntersection', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _Connection_connectingLane = SEQ(name='connectingLane', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ConnectingLane')), opt=True)
    _Connection_phaseId = INT(name='phaseId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PhaseID')), opt=True)
    Connection._cont = ASN1Dict([
        ('remoteIntersection', _Connection_remoteIntersection),
        ('connectingLane', _Connection_connectingLane),
        ('phaseId', _Connection_phaseId),
        ])
    Connection._ext = None
    
    #-----< ConnectingLane >-----#
    ConnectingLane = SEQ(name='ConnectingLane', mode=MODE_TYPE)
    _ConnectingLane_lane = INT(name='lane', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneID')))
    _ConnectingLane_maneuver = BIT_STR(name='maneuver', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'AllowedManeuvers')), opt=True)
    ConnectingLane._cont = ASN1Dict([
        ('lane', _ConnectingLane_lane),
        ('maneuver', _ConnectingLane_maneuver),
        ])
    ConnectingLane._ext = None
    
    #-----< AllowedManeuvers >-----#
    AllowedManeuvers = BIT_STR(name='AllowedManeuvers', mode=MODE_TYPE)
    AllowedManeuvers._cont = ASN1Dict([('maneuverStraightAllowed', 0), ('maneuverLeftAllowed', 1), ('maneuverRightAllowed', 2), ('maneuverUTurnAllowed', 3), ('maneuverLeftTurnOnRedAllowed', 4), ('maneuverRightTurnOnRedAllowed', 5), ('maneuverLaneChangeAllowed', 6), ('maneuverNoStoppingAllowed', 7), ('yieldAllwaysRequired', 8), ('goWithHalt', 9), ('caution', 10), ('reserved1', 11)])
    AllowedManeuvers._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes >-----#
    LaneAttributes = SEQ(name='LaneAttributes', mode=MODE_TYPE)
    _LaneAttributes_shareWith = BIT_STR(name='shareWith', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneSharing')), opt=True)
    _LaneAttributes_laneType = CHOICE(name='laneType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneTypeAttributes')))
    LaneAttributes._cont = ASN1Dict([
        ('shareWith', _LaneAttributes_shareWith),
        ('laneType', _LaneAttributes_laneType),
        ])
    LaneAttributes._ext = None
    
    #-----< LaneSharing >-----#
    LaneSharing = BIT_STR(name='LaneSharing', mode=MODE_TYPE)
    LaneSharing._cont = ASN1Dict([('overlappingLaneDescriptionProvided', 0), ('multipleLanesTreatedAsOneLane', 1), ('otherNonMotorizedTrafficTypes', 2), ('individualMotorizedVehicleTraffic', 3), ('busVehicleTraffic', 4), ('taxiVehicleTraffic', 5), ('pedestriansTraffic', 6), ('cyclistVehicleTraffic', 7), ('trackedVehicleTraffic', 8), ('pedestrianTraffic', 9)])
    LaneSharing._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< LaneTypeAttributes >-----#
    LaneTypeAttributes = CHOICE(name='LaneTypeAttributes', mode=MODE_TYPE)
    _LaneTypeAttributes_vehicle = BIT_STR(name='vehicle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Vehicle')))
    _LaneTypeAttributes_crosswalk = BIT_STR(name='crosswalk', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Crosswalk')))
    _LaneTypeAttributes_bikeLane = BIT_STR(name='bikeLane', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Bike')))
    _LaneTypeAttributes_sidewalk = BIT_STR(name='sidewalk', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Sidewalk')))
    _LaneTypeAttributes_median = BIT_STR(name='median', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Barrier')))
    _LaneTypeAttributes_striping = BIT_STR(name='striping', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Striping')))
    _LaneTypeAttributes_trackedVehicle = BIT_STR(name='trackedVehicle', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-TrackedVehicle')))
    _LaneTypeAttributes_parking = BIT_STR(name='parking', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneAttributes-Parking')))
    LaneTypeAttributes._cont = ASN1Dict([
        ('vehicle', _LaneTypeAttributes_vehicle),
        ('crosswalk', _LaneTypeAttributes_crosswalk),
        ('bikeLane', _LaneTypeAttributes_bikeLane),
        ('sidewalk', _LaneTypeAttributes_sidewalk),
        ('median', _LaneTypeAttributes_median),
        ('striping', _LaneTypeAttributes_striping),
        ('trackedVehicle', _LaneTypeAttributes_trackedVehicle),
        ('parking', _LaneTypeAttributes_parking),
        ])
    LaneTypeAttributes._ext = []
    
    #-----< LaneAttributes-Vehicle >-----#
    LaneAttributes_Vehicle = BIT_STR(name='LaneAttributes-Vehicle', mode=MODE_TYPE)
    LaneAttributes_Vehicle._cont = ASN1Dict([('isVehicleRevocableLane', 0), ('isVehicleFlyOverLane', 1), ('hovLaneUseOnly', 2), ('restrictedToBusUse', 3), ('restrictedToTaxiUse', 4), ('restrictedFromPublicUse', 5), ('hasIRbeaconCoverage', 6), ('permissionOnRequest', 7)])
    LaneAttributes_Vehicle._const_sz = ASN1Set(rv=[8], rr=[], ev=[], er=[])
    
    #-----< LaneAttributes-Crosswalk >-----#
    LaneAttributes_Crosswalk = BIT_STR(name='LaneAttributes-Crosswalk', mode=MODE_TYPE)
    LaneAttributes_Crosswalk._cont = ASN1Dict([('crosswalkRevocableLane', 0), ('bicyleUseAllowed', 1), ('isXwalkFlyOverLane', 2), ('fixedCycleTime', 3), ('biDirectionalCycleTimes', 4), ('hasPushToWalkButton', 5), ('audioSupport', 6), ('rfSignalRequestPresent', 7), ('unsignalizedSegmentsPresent', 8)])
    LaneAttributes_Crosswalk._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Bike >-----#
    LaneAttributes_Bike = BIT_STR(name='LaneAttributes-Bike', mode=MODE_TYPE)
    LaneAttributes_Bike._cont = ASN1Dict([('bikeRevocableLane', 0), ('pedestrianUseAllowed', 1), ('isBikeFlyOverLane', 2), ('fixedCycleTime', 3), ('biDirectionalCycleTimes', 4), ('isolatedByBarrier', 5), ('unsignalizedSegmentsPresent', 6)])
    LaneAttributes_Bike._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Sidewalk >-----#
    LaneAttributes_Sidewalk = BIT_STR(name='LaneAttributes-Sidewalk', mode=MODE_TYPE)
    LaneAttributes_Sidewalk._cont = ASN1Dict([('sidewalk-RevocableLane', 0), ('bicyleUseAllowed', 1), ('isSidewalkFlyOverLane', 2), ('walkBikes', 3)])
    LaneAttributes_Sidewalk._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Barrier >-----#
    LaneAttributes_Barrier = BIT_STR(name='LaneAttributes-Barrier', mode=MODE_TYPE)
    LaneAttributes_Barrier._cont = ASN1Dict([('median-RevocableLane', 0), ('median', 1), ('whiteLineHashing', 2), ('stripedLines', 3), ('doubleStripedLines', 4), ('trafficCones', 5), ('constructionBarrier', 6), ('trafficChannels', 7), ('lowCurbs', 8), ('highCurbs', 9)])
    LaneAttributes_Barrier._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Striping >-----#
    LaneAttributes_Striping = BIT_STR(name='LaneAttributes-Striping', mode=MODE_TYPE)
    LaneAttributes_Striping._cont = ASN1Dict([('stripeToConnectingLanesRevocableLane', 0), ('stripeDrawOnLeft', 1), ('stripeDrawOnRight', 2), ('stripeToConnectingLanesLeft', 3), ('stripeToConnectingLanesRight', 4), ('stripeToConnectingLanesAhead', 5)])
    LaneAttributes_Striping._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-TrackedVehicle >-----#
    LaneAttributes_TrackedVehicle = BIT_STR(name='LaneAttributes-TrackedVehicle', mode=MODE_TYPE)
    LaneAttributes_TrackedVehicle._cont = ASN1Dict([('spec-RevocableLane', 0), ('spec-commuterRailRoadTrack', 1), ('spec-lightRailRoadTrack', 2), ('spec-heavyRailRoadTrack', 3), ('spec-otherRailType', 4)])
    LaneAttributes_TrackedVehicle._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Parking >-----#
    LaneAttributes_Parking = BIT_STR(name='LaneAttributes-Parking', mode=MODE_TYPE)
    LaneAttributes_Parking._cont = ASN1Dict([('parkingRevocableLane', 0), ('parallelParkingInUse', 1), ('headInParkingInUse', 2), ('doNotParkZone', 3), ('parkingForBusUse', 4), ('parkingForTaxiUse', 5), ('noPublicParkingUse', 6)])
    LaneAttributes_Parking._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LinkList >-----#
    LinkList = SEQ_OF(name='LinkList', mode=MODE_TYPE)
    _LinkList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'Link')))
    LinkList._cont = _LinkList__item_
    LinkList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Link >-----#
    Link = SEQ(name='Link', mode=MODE_TYPE)
    _Link_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DescriptiveName')), opt=True)
    _Link_upstreamNodeId = SEQ(name='upstreamNodeId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _Link_speedLimits = SEQ_OF(name='speedLimits', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SpeedLimitList')), opt=True)
    _Link_linkWidth = INT(name='linkWidth', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneWidth')))
    _Link_points = SEQ_OF(name='points', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PointList')), opt=True)
    _Link_movements = SEQ_OF(name='movements', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MovementList')), opt=True)
    _Link_lanes = SEQ_OF(name='lanes', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LaneList')))
    Link._cont = ASN1Dict([
        ('name', _Link_name),
        ('upstreamNodeId', _Link_upstreamNodeId),
        ('speedLimits', _Link_speedLimits),
        ('linkWidth', _Link_linkWidth),
        ('points', _Link_points),
        ('movements', _Link_movements),
        ('lanes', _Link_lanes),
        ])
    Link._ext = []
    
    #-----< MovementList >-----#
    MovementList = SEQ_OF(name='MovementList', mode=MODE_TYPE)
    _MovementList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'Movement')))
    MovementList._cont = _MovementList__item_
    MovementList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Movement >-----#
    Movement = SEQ(name='Movement', mode=MODE_TYPE)
    _Movement_remoteIntersection = SEQ(name='remoteIntersection', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _Movement_phaseId = INT(name='phaseId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PhaseID')), opt=True)
    Movement._cont = ASN1Dict([
        ('remoteIntersection', _Movement_remoteIntersection),
        ('phaseId', _Movement_phaseId),
        ])
    Movement._ext = None
    
    #-----< NodeList >-----#
    NodeList = SEQ_OF(name='NodeList', mode=MODE_TYPE)
    _NodeList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'Node')))
    NodeList._cont = _NodeList__item_
    NodeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< Node >-----#
    Node = SEQ(name='Node', mode=MODE_TYPE)
    _Node_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DescriptiveName')), opt=True)
    _Node_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _Node_refPos = SEQ(name='refPos', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position3D')))
    _Node_inLinks = SEQ_OF(name='inLinks', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LinkList')), opt=True)
    Node._cont = ASN1Dict([
        ('name', _Node_name),
        ('id', _Node_id),
        ('refPos', _Node_refPos),
        ('inLinks', _Node_inLinks),
        ])
    Node._ext = []
    
    #-----< DescriptiveName >-----#
    DescriptiveName = STR_IA5(name='DescriptiveName', mode=MODE_TYPE)
    DescriptiveName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< NodeReferenceID >-----#
    NodeReferenceID = SEQ(name='NodeReferenceID', mode=MODE_TYPE)
    _NodeReferenceID_region = INT(name='region', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RoadRegulatorID')), opt=True)
    _NodeReferenceID_id = INT(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeID')))
    NodeReferenceID._cont = ASN1Dict([
        ('region', _NodeReferenceID_region),
        ('id', _NodeReferenceID_id),
        ])
    NodeReferenceID._ext = None
    
    #-----< RoadRegulatorID >-----#
    RoadRegulatorID = INT(name='RoadRegulatorID', mode=MODE_TYPE)
    RoadRegulatorID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< NodeID >-----#
    NodeID = INT(name='NodeID', mode=MODE_TYPE)
    NodeID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< PointList >-----#
    PointList = SEQ_OF(name='PointList', mode=MODE_TYPE)
    _PointList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'RoadPoint')))
    PointList._cont = _PointList__item_
    PointList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=31)], ev=None, er=[])
    
    #-----< RoadPoint >-----#
    RoadPoint = SEQ(name='RoadPoint', mode=MODE_TYPE)
    _RoadPoint_posOffset = SEQ(name='posOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLLV')))
    RoadPoint._cont = ASN1Dict([
        ('posOffset', _RoadPoint_posOffset),
        ])
    RoadPoint._ext = []
    
    #-----< SpeedLimitList >-----#
    SpeedLimitList = SEQ_OF(name='SpeedLimitList', mode=MODE_TYPE)
    _SpeedLimitList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'RegulatorySpeedLimit')))
    SpeedLimitList._cont = _SpeedLimitList__item_
    SpeedLimitList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< RegulatorySpeedLimit >-----#
    RegulatorySpeedLimit = SEQ(name='RegulatorySpeedLimit', mode=MODE_TYPE)
    _RegulatorySpeedLimit_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SpeedLimitType')))
    _RegulatorySpeedLimit_speed = INT(name='speed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Speed')))
    RegulatorySpeedLimit._cont = ASN1Dict([
        ('type', _RegulatorySpeedLimit_type),
        ('speed', _RegulatorySpeedLimit_speed),
        ])
    RegulatorySpeedLimit._ext = None
    
    #-----< SpeedLimitType >-----#
    SpeedLimitType = ENUM(name='SpeedLimitType', mode=MODE_TYPE)
    SpeedLimitType._cont = ASN1Dict([('unknown', 0), ('maxSpeedInSchoolZone', 1), ('maxSpeedInSchoolZoneWhenChildrenArePresent', 2), ('maxSpeedInConstructionZone', 3), ('vehicleMinSpeed', 4), ('vehicleMaxSpeed', 5), ('vehicleNightMaxSpeed', 6), ('truckMinSpeed', 7), ('truckMaxSpeed', 8), ('truckNightMaxSpeed', 9), ('vehiclesWithTrailersMinSpeed', 10), ('vehiclesWithTrailersMaxSpeed', 11), ('vehiclesWithTrailersNightMaxSpeed', 12)])
    SpeedLimitType._ext = []
    
    #-----< RoadSideInformation >-----#
    RoadSideInformation = SEQ(name='RoadSideInformation', mode=MODE_TYPE)
    _RoadSideInformation_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MsgCount')))
    _RoadSideInformation_moy = INT(name='moy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MinuteOfTheYear')), opt=True)
    _RoadSideInformation_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RoadSideInformation_id._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _RoadSideInformation_refPos = SEQ(name='refPos', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position3D')))
    _RoadSideInformation_rtes = SEQ_OF(name='rtes', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RTEList')), opt=True)
    _RoadSideInformation_rtss = SEQ_OF(name='rtss', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RTSList')), opt=True)
    RoadSideInformation._cont = ASN1Dict([
        ('msgCnt', _RoadSideInformation_msgCnt),
        ('moy', _RoadSideInformation_moy),
        ('id', _RoadSideInformation_id),
        ('refPos', _RoadSideInformation_refPos),
        ('rtes', _RoadSideInformation_rtes),
        ('rtss', _RoadSideInformation_rtss),
        ])
    RoadSideInformation._ext = []
    
    #-----< RTEList >-----#
    RTEList = SEQ_OF(name='RTEList', mode=MODE_TYPE)
    _RTEList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'RTEData')))
    RTEList._cont = _RTEList__item_
    RTEList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< RTEData >-----#
    RTEData = SEQ(name='RTEData', mode=MODE_TYPE)
    _RTEData_rteId = INT(name='rteId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RTEData_rteId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _RTEData_eventType = INT(name='eventType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'EventType')))
    _RTEData_eventSource = ENUM(name='eventSource', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'EventSource')))
    _RTEData_eventPos = SEQ(name='eventPos', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLLV')), opt=True)
    _RTEData_eventRadius = INT(name='eventRadius', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Radius')), opt=True)
    _RTEData_description = CHOICE(name='description', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MsgFrame', 'Description')), opt=True)
    _RTEData_timeDetails = SEQ(name='timeDetails', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RSITimeDetails')), opt=True)
    _RTEData_priority = OCT_STR(name='priority', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RSIPriority')), opt=True)
    _RTEData_referencePaths = SEQ_OF(name='referencePaths', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ReferencePathList')), opt=True)
    _RTEData_referenceLinks = SEQ_OF(name='referenceLinks', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ReferenceLinkList')), opt=True)
    _RTEData_eventConfidence = INT(name='eventConfidence', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Confidence')), opt=True)
    RTEData._cont = ASN1Dict([
        ('rteId', _RTEData_rteId),
        ('eventType', _RTEData_eventType),
        ('eventSource', _RTEData_eventSource),
        ('eventPos', _RTEData_eventPos),
        ('eventRadius', _RTEData_eventRadius),
        ('description', _RTEData_description),
        ('timeDetails', _RTEData_timeDetails),
        ('priority', _RTEData_priority),
        ('referencePaths', _RTEData_referencePaths),
        ('referenceLinks', _RTEData_referenceLinks),
        ('eventConfidence', _RTEData_eventConfidence),
        ])
    RTEData._ext = []
    
    #-----< EventSource >-----#
    EventSource = ENUM(name='EventSource', mode=MODE_TYPE)
    EventSource._cont = ASN1Dict([('unknown', 0), ('police', 1), ('government', 2), ('meteorological', 3), ('internet', 4), ('detection', 5)])
    EventSource._ext = []
    
    #-----< EventType >-----#
    EventType = INT(name='EventType', mode=MODE_TYPE)
    EventType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< RSITimeDetails >-----#
    RSITimeDetails = SEQ(name='RSITimeDetails', mode=MODE_TYPE)
    _RSITimeDetails_startTime = INT(name='startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MinuteOfTheYear')), opt=True)
    _RSITimeDetails_endTime = INT(name='endTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MinuteOfTheYear')), opt=True)
    _RSITimeDetails_endTimeConfidence = ENUM(name='endTimeConfidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeConfidence')), opt=True)
    RSITimeDetails._cont = ASN1Dict([
        ('startTime', _RSITimeDetails_startTime),
        ('endTime', _RSITimeDetails_endTime),
        ('endTimeConfidence', _RSITimeDetails_endTimeConfidence),
        ])
    RSITimeDetails._ext = None
    
    #-----< ReferencePathList >-----#
    ReferencePathList = SEQ_OF(name='ReferencePathList', mode=MODE_TYPE)
    _ReferencePathList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'ReferencePath')))
    ReferencePathList._cont = _ReferencePathList__item_
    ReferencePathList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ReferencePath >-----#
    ReferencePath = SEQ(name='ReferencePath', mode=MODE_TYPE)
    _ReferencePath_activePath = SEQ_OF(name='activePath', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PathPointList')))
    _ReferencePath_pathRadius = INT(name='pathRadius', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Radius')))
    ReferencePath._cont = ASN1Dict([
        ('activePath', _ReferencePath_activePath),
        ('pathRadius', _ReferencePath_pathRadius),
        ])
    ReferencePath._ext = None
    
    #-----< RTSList >-----#
    RTSList = SEQ_OF(name='RTSList', mode=MODE_TYPE)
    _RTSList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'RTSData')))
    RTSList._cont = _RTSList__item_
    RTSList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< RTSData >-----#
    RTSData = SEQ(name='RTSData', mode=MODE_TYPE)
    _RTSData_rtsId = INT(name='rtsId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RTSData_rtsId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _RTSData_signType = INT(name='signType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SignType')))
    _RTSData_signPos = SEQ(name='signPos', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLLV')), opt=True)
    _RTSData_description = CHOICE(name='description', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MsgFrame', 'Description')), opt=True)
    _RTSData_timeDetails = SEQ(name='timeDetails', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RSITimeDetails')), opt=True)
    _RTSData_priority = OCT_STR(name='priority', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RSIPriority')), opt=True)
    _RTSData_referencePaths = SEQ_OF(name='referencePaths', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ReferencePathList')), opt=True)
    _RTSData_referenceLinks = SEQ_OF(name='referenceLinks', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ReferenceLinkList')), opt=True)
    RTSData._cont = ASN1Dict([
        ('rtsId', _RTSData_rtsId),
        ('signType', _RTSData_signType),
        ('signPos', _RTSData_signPos),
        ('description', _RTSData_description),
        ('timeDetails', _RTSData_timeDetails),
        ('priority', _RTSData_priority),
        ('referencePaths', _RTSData_referencePaths),
        ('referenceLinks', _RTSData_referenceLinks),
        ])
    RTSData._ext = []
    
    #-----< Description >-----#
    Description = CHOICE(name='Description', mode=MODE_TYPE)
    _Description_textString = STR_IA5(name='textString', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Description_textString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=512)], ev=None, er=[])
    _Description_textGB2312 = OCT_STR(name='textGB2312', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Description_textGB2312._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=512)], ev=None, er=[])
    Description._cont = ASN1Dict([
        ('textString', _Description_textString),
        ('textGB2312', _Description_textGB2312),
        ])
    Description._ext = None
    
    #-----< ReferenceLinkList >-----#
    ReferenceLinkList = SEQ_OF(name='ReferenceLinkList', mode=MODE_TYPE)
    _ReferenceLinkList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'ReferenceLink')))
    ReferenceLinkList._cont = _ReferenceLinkList__item_
    ReferenceLinkList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< ReferenceLink >-----#
    ReferenceLink = SEQ(name='ReferenceLink', mode=MODE_TYPE)
    _ReferenceLink_upstreamNodeId = SEQ(name='upstreamNodeId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _ReferenceLink_downstreamNodeId = SEQ(name='downstreamNodeId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _ReferenceLink_referenceLanes = BIT_STR(name='referenceLanes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ReferenceLanes')), opt=True)
    ReferenceLink._cont = ASN1Dict([
        ('upstreamNodeId', _ReferenceLink_upstreamNodeId),
        ('downstreamNodeId', _ReferenceLink_downstreamNodeId),
        ('referenceLanes', _ReferenceLink_referenceLanes),
        ])
    ReferenceLink._ext = None
    
    #-----< ReferenceLanes >-----#
    ReferenceLanes = BIT_STR(name='ReferenceLanes', mode=MODE_TYPE)
    ReferenceLanes._cont = ASN1Dict([('reserved', 0), ('lane1', 1), ('lane2', 2), ('lane3', 3), ('lane4', 4), ('lane5', 5), ('lane6', 6), ('lane7', 7), ('lane8', 8), ('lane9', 9), ('lane10', 10), ('lane11', 11), ('lane12', 12), ('lane13', 13), ('lane14', 14), ('lane15', 15)])
    ReferenceLanes._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< SignType >-----#
    SignType = INT(name='SignType', mode=MODE_TYPE)
    SignType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< PathPointList >-----#
    PathPointList = SEQ_OF(name='PathPointList', mode=MODE_TYPE)
    _PathPointList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLLV')))
    PathPointList._cont = _PathPointList__item_
    PathPointList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=32)], ev=None, er=[])
    
    #-----< Radius >-----#
    Radius = INT(name='Radius', mode=MODE_TYPE)
    Radius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< RSIPriority >-----#
    RSIPriority = OCT_STR(name='RSIPriority', mode=MODE_TYPE)
    RSIPriority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< RoadsideSafetyMessage >-----#
    RoadsideSafetyMessage = SEQ(name='RoadsideSafetyMessage', mode=MODE_TYPE)
    _RoadsideSafetyMessage_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MsgCount')))
    _RoadsideSafetyMessage_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RoadsideSafetyMessage_id._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _RoadsideSafetyMessage_refPos = SEQ(name='refPos', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position3D')))
    _RoadsideSafetyMessage_participants = SEQ_OF(name='participants', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ParticipantList')))
    RoadsideSafetyMessage._cont = ASN1Dict([
        ('msgCnt', _RoadsideSafetyMessage_msgCnt),
        ('id', _RoadsideSafetyMessage_id),
        ('refPos', _RoadsideSafetyMessage_refPos),
        ('participants', _RoadsideSafetyMessage_participants),
        ])
    RoadsideSafetyMessage._ext = []
    
    #-----< ParticipantList >-----#
    ParticipantList = SEQ_OF(name='ParticipantList', mode=MODE_TYPE)
    _ParticipantList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'ParticipantData')))
    ParticipantList._cont = _ParticipantList__item_
    ParticipantList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< ParticipantData >-----#
    ParticipantData = SEQ(name='ParticipantData', mode=MODE_TYPE)
    _ParticipantData_ptcType = ENUM(name='ptcType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ParticipantType')))
    _ParticipantData_ptcId = INT(name='ptcId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ParticipantData_ptcId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _ParticipantData_source = ENUM(name='source', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SourceType')))
    _ParticipantData_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ParticipantData_id._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ParticipantData_secMark = INT(name='secMark', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DSecond')))
    _ParticipantData_pos = SEQ(name='pos', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLLV')))
    _ParticipantData_posConfidence = SEQ(name='posConfidence', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionConfidenceSet')))
    _ParticipantData_transmission = ENUM(name='transmission', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TransmissionState')), opt=True)
    _ParticipantData_speed = INT(name='speed', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Speed')))
    _ParticipantData_heading = INT(name='heading', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Heading')))
    _ParticipantData_angle = INT(name='angle', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SteeringWheelAngle')), opt=True)
    _ParticipantData_motionCfd = SEQ(name='motionCfd', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MotionConfidenceSet')), opt=True)
    _ParticipantData_accelSet = SEQ(name='accelSet', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'AccelerationSet4Way')), opt=True)
    _ParticipantData_size = SEQ(name='size', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleSize')))
    _ParticipantData_vehicleClass = SEQ(name='vehicleClass', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleClassification')), opt=True)
    ParticipantData._cont = ASN1Dict([
        ('ptcType', _ParticipantData_ptcType),
        ('ptcId', _ParticipantData_ptcId),
        ('source', _ParticipantData_source),
        ('id', _ParticipantData_id),
        ('secMark', _ParticipantData_secMark),
        ('pos', _ParticipantData_pos),
        ('posConfidence', _ParticipantData_posConfidence),
        ('transmission', _ParticipantData_transmission),
        ('speed', _ParticipantData_speed),
        ('heading', _ParticipantData_heading),
        ('angle', _ParticipantData_angle),
        ('motionCfd', _ParticipantData_motionCfd),
        ('accelSet', _ParticipantData_accelSet),
        ('size', _ParticipantData_size),
        ('vehicleClass', _ParticipantData_vehicleClass),
        ])
    ParticipantData._ext = []
    
    #-----< ParticipantType >-----#
    ParticipantType = ENUM(name='ParticipantType', mode=MODE_TYPE)
    ParticipantType._cont = ASN1Dict([('unknown', 0), ('motor', 1), ('non-motor', 2), ('pedestrian', 3), ('rsu', 4)])
    ParticipantType._ext = []
    
    #-----< SourceType >-----#
    SourceType = ENUM(name='SourceType', mode=MODE_TYPE)
    SourceType._cont = ASN1Dict([('unknown', 0), ('selfinfo', 1), ('v2x', 2), ('video', 3), ('microwaveRadar', 4), ('loop', 5), ('lidar', 6), ('integrated', 7)])
    SourceType._ext = []
    
    #-----< SPAT >-----#
    SPAT = SEQ(name='SPAT', mode=MODE_TYPE)
    _SPAT_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MsgCount')))
    _SPAT_moy = INT(name='moy', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MinuteOfTheYear')), opt=True)
    _SPAT_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DSecond')), opt=True)
    _SPAT_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DescriptiveName')), opt=True)
    _SPAT_intersections = SEQ_OF(name='intersections', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'IntersectionStateList')))
    SPAT._cont = ASN1Dict([
        ('msgCnt', _SPAT_msgCnt),
        ('moy', _SPAT_moy),
        ('timeStamp', _SPAT_timeStamp),
        ('name', _SPAT_name),
        ('intersections', _SPAT_intersections),
        ])
    SPAT._ext = []
    
    #-----< IntersectionStateList >-----#
    IntersectionStateList = SEQ_OF(name='IntersectionStateList', mode=MODE_TYPE)
    _IntersectionStateList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'IntersectionState')))
    IntersectionStateList._cont = _IntersectionStateList__item_
    IntersectionStateList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< IntersectionState >-----#
    IntersectionState = SEQ(name='IntersectionState', mode=MODE_TYPE)
    _IntersectionState_intersectionId = SEQ(name='intersectionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'NodeReferenceID')))
    _IntersectionState_status = BIT_STR(name='status', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'IntersectionStatusObject')))
    _IntersectionState_moy = INT(name='moy', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MinuteOfTheYear')), opt=True)
    _IntersectionState_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DSecond')), opt=True)
    _IntersectionState_timeConfidence = ENUM(name='timeConfidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeConfidence')), opt=True)
    _IntersectionState_phases = SEQ_OF(name='phases', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PhaseList')))
    IntersectionState._cont = ASN1Dict([
        ('intersectionId', _IntersectionState_intersectionId),
        ('status', _IntersectionState_status),
        ('moy', _IntersectionState_moy),
        ('timeStamp', _IntersectionState_timeStamp),
        ('timeConfidence', _IntersectionState_timeConfidence),
        ('phases', _IntersectionState_phases),
        ])
    IntersectionState._ext = []
    
    #-----< IntersectionStatusObject >-----#
    IntersectionStatusObject = BIT_STR(name='IntersectionStatusObject', mode=MODE_TYPE)
    IntersectionStatusObject._cont = ASN1Dict([('manualControlIsEnabled', 0), ('stopTimeIsActivated', 1), ('failureFlash', 2), ('preemptIsActive', 3), ('signalPriorityIsActive', 4), ('fixedTimeOperation', 5), ('trafficDependentOperation', 6), ('standbyOperation', 7), ('failureMode', 8), ('off', 9), ('recentMAPmessageUpdate', 10), ('recentChangeInMAPassignedLanesIDsUsed', 11), ('noValidMAPisAvailableAtThisTime', 12), ('noValidSPATisAvailableAtThisTime', 13)])
    IntersectionStatusObject._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< PhaseList >-----#
    PhaseList = SEQ_OF(name='PhaseList', mode=MODE_TYPE)
    _PhaseList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'Phase')))
    PhaseList._cont = _PhaseList__item_
    PhaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< Phase >-----#
    Phase = SEQ(name='Phase', mode=MODE_TYPE)
    _Phase_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PhaseID')))
    _Phase_phaseStates = SEQ_OF(name='phaseStates', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PhaseStateList')))
    Phase._cont = ASN1Dict([
        ('id', _Phase_id),
        ('phaseStates', _Phase_phaseStates),
        ])
    Phase._ext = None
    
    #-----< PhaseStateList >-----#
    PhaseStateList = SEQ_OF(name='PhaseStateList', mode=MODE_TYPE)
    _PhaseStateList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'PhaseState')))
    PhaseStateList._cont = _PhaseStateList__item_
    PhaseStateList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< PhaseState >-----#
    PhaseState = SEQ(name='PhaseState', mode=MODE_TYPE)
    _PhaseState_light = ENUM(name='light', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LightState')))
    _PhaseState_timing = CHOICE(name='timing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeChangeDetails')), opt=True)
    PhaseState._cont = ASN1Dict([
        ('light', _PhaseState_light),
        ('timing', _PhaseState_timing),
        ])
    PhaseState._ext = []
    
    #-----< LightState >-----#
    LightState = ENUM(name='LightState', mode=MODE_TYPE)
    LightState._cont = ASN1Dict([('unavailable', 0), ('dark', 1), ('flashing-red', 2), ('red', 3), ('flashing-green', 4), ('permissive-green', 5), ('protected-green', 6), ('yellow', 7), ('flashing-yellow', 8)])
    LightState._ext = []
    
    #-----< TimeChangeDetails >-----#
    TimeChangeDetails = CHOICE(name='TimeChangeDetails', mode=MODE_TYPE)
    _TimeChangeDetails_counting = SEQ(name='counting', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeCountingDown')))
    _TimeChangeDetails_utcTiming = SEQ(name='utcTiming', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'UTCTiming')))
    TimeChangeDetails._cont = ASN1Dict([
        ('counting', _TimeChangeDetails_counting),
        ('utcTiming', _TimeChangeDetails_utcTiming),
        ])
    TimeChangeDetails._ext = []
    
    #-----< UTCTiming >-----#
    UTCTiming = SEQ(name='UTCTiming', mode=MODE_TYPE)
    _UTCTiming_startUTCTime = INT(name='startUTCTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')))
    _UTCTiming_minEndUTCTime = INT(name='minEndUTCTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    _UTCTiming_maxEndUTCTime = INT(name='maxEndUTCTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    _UTCTiming_likelyEndUTCTime = INT(name='likelyEndUTCTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')))
    _UTCTiming_timeConfidence = INT(name='timeConfidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Confidence')), opt=True)
    _UTCTiming_nextStartUTCTime = INT(name='nextStartUTCTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    _UTCTiming_nextEndUTCTime = INT(name='nextEndUTCTime', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    UTCTiming._cont = ASN1Dict([
        ('startUTCTime', _UTCTiming_startUTCTime),
        ('minEndUTCTime', _UTCTiming_minEndUTCTime),
        ('maxEndUTCTime', _UTCTiming_maxEndUTCTime),
        ('likelyEndUTCTime', _UTCTiming_likelyEndUTCTime),
        ('timeConfidence', _UTCTiming_timeConfidence),
        ('nextStartUTCTime', _UTCTiming_nextStartUTCTime),
        ('nextEndUTCTime', _UTCTiming_nextEndUTCTime),
        ])
    UTCTiming._ext = None
    
    #-----< TimeCountingDown >-----#
    TimeCountingDown = SEQ(name='TimeCountingDown', mode=MODE_TYPE)
    _TimeCountingDown_startTime = INT(name='startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')))
    _TimeCountingDown_minEndTime = INT(name='minEndTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    _TimeCountingDown_maxEndTime = INT(name='maxEndTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    _TimeCountingDown_likelyEndTime = INT(name='likelyEndTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')))
    _TimeCountingDown_timeConfidence = INT(name='timeConfidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Confidence')), opt=True)
    _TimeCountingDown_nextStartTime = INT(name='nextStartTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    _TimeCountingDown_nextDuration = INT(name='nextDuration', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeMark')), opt=True)
    TimeCountingDown._cont = ASN1Dict([
        ('startTime', _TimeCountingDown_startTime),
        ('minEndTime', _TimeCountingDown_minEndTime),
        ('maxEndTime', _TimeCountingDown_maxEndTime),
        ('likelyEndTime', _TimeCountingDown_likelyEndTime),
        ('timeConfidence', _TimeCountingDown_timeConfidence),
        ('nextStartTime', _TimeCountingDown_nextStartTime),
        ('nextDuration', _TimeCountingDown_nextDuration),
        ])
    TimeCountingDown._ext = None
    
    #-----< PhaseID >-----#
    PhaseID = INT(name='PhaseID', mode=MODE_TYPE)
    PhaseID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< BrakeSystemStatus >-----#
    BrakeSystemStatus = SEQ(name='BrakeSystemStatus', mode=MODE_TYPE)
    _BrakeSystemStatus_brakePadel = ENUM(name='brakePadel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'BrakePedalStatus')), opt=True)
    _BrakeSystemStatus_wheelBrakes = BIT_STR(name='wheelBrakes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'BrakeAppliedStatus')), opt=True)
    _BrakeSystemStatus_traction = ENUM(name='traction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TractionControlStatus')), opt=True)
    _BrakeSystemStatus_abs = ENUM(name='abs', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'AntiLockBrakeStatus')), opt=True)
    _BrakeSystemStatus_scs = ENUM(name='scs', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'StabilityControlStatus')), opt=True)
    _BrakeSystemStatus_brakeBoost = ENUM(name='brakeBoost', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'BrakeBoostApplied')), opt=True)
    _BrakeSystemStatus_auxBrakes = ENUM(name='auxBrakes', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'AuxiliaryBrakeStatus')), opt=True)
    BrakeSystemStatus._cont = ASN1Dict([
        ('brakePadel', _BrakeSystemStatus_brakePadel),
        ('wheelBrakes', _BrakeSystemStatus_wheelBrakes),
        ('traction', _BrakeSystemStatus_traction),
        ('abs', _BrakeSystemStatus_abs),
        ('scs', _BrakeSystemStatus_scs),
        ('brakeBoost', _BrakeSystemStatus_brakeBoost),
        ('auxBrakes', _BrakeSystemStatus_auxBrakes),
        ])
    BrakeSystemStatus._ext = None
    
    #-----< BrakePedalStatus >-----#
    BrakePedalStatus = ENUM(name='BrakePedalStatus', mode=MODE_TYPE)
    BrakePedalStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2)])
    BrakePedalStatus._ext = None
    
    #-----< BrakeAppliedStatus >-----#
    BrakeAppliedStatus = BIT_STR(name='BrakeAppliedStatus', mode=MODE_TYPE)
    BrakeAppliedStatus._cont = ASN1Dict([('unavailable', 0), ('leftFront', 1), ('leftRear', 2), ('rightFront', 3), ('rightRear', 4)])
    BrakeAppliedStatus._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< BrakeBoostApplied >-----#
    BrakeBoostApplied = ENUM(name='BrakeBoostApplied', mode=MODE_TYPE)
    BrakeBoostApplied._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2)])
    BrakeBoostApplied._ext = None
    
    #-----< TractionControlStatus >-----#
    TractionControlStatus = ENUM(name='TractionControlStatus', mode=MODE_TYPE)
    TractionControlStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('engaged', 3)])
    TractionControlStatus._ext = None
    
    #-----< AntiLockBrakeStatus >-----#
    AntiLockBrakeStatus = ENUM(name='AntiLockBrakeStatus', mode=MODE_TYPE)
    AntiLockBrakeStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('engaged', 3)])
    AntiLockBrakeStatus._ext = None
    
    #-----< StabilityControlStatus >-----#
    StabilityControlStatus = ENUM(name='StabilityControlStatus', mode=MODE_TYPE)
    StabilityControlStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('engaged', 3)])
    StabilityControlStatus._ext = None
    
    #-----< AuxiliaryBrakeStatus >-----#
    AuxiliaryBrakeStatus = ENUM(name='AuxiliaryBrakeStatus', mode=MODE_TYPE)
    AuxiliaryBrakeStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('reserved', 3)])
    AuxiliaryBrakeStatus._ext = None
    
    #-----< VehicleClassification >-----#
    VehicleClassification = SEQ(name='VehicleClassification', mode=MODE_TYPE)
    _VehicleClassification_classification = INT(name='classification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    _VehicleClassification_fuelType = INT(name='fuelType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'FuelType')), opt=True)
    VehicleClassification._cont = ASN1Dict([
        ('classification', _VehicleClassification_classification),
        ('fuelType', _VehicleClassification_fuelType),
        ])
    VehicleClassification._ext = []
    
    #-----< BasicVehicleClass >-----#
    BasicVehicleClass = INT(name='BasicVehicleClass', mode=MODE_TYPE)
    BasicVehicleClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< unknownVehicleClass >-----#
    unknownVehicleClass = INT(name='unknownVehicleClass', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    unknownVehicleClass._val = 0
    
    #-----< specialVehicleClass >-----#
    specialVehicleClass = INT(name='specialVehicleClass', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    specialVehicleClass._val = 1
    
    #-----< passenger-Vehicle-TypeUnknown >-----#
    passenger_Vehicle_TypeUnknown = INT(name='passenger-Vehicle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    passenger_Vehicle_TypeUnknown._val = 10
    
    #-----< passenger-Vehicle-TypeOther >-----#
    passenger_Vehicle_TypeOther = INT(name='passenger-Vehicle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    passenger_Vehicle_TypeOther._val = 11
    
    #-----< lightTruck-Vehicle-TypeUnknown >-----#
    lightTruck_Vehicle_TypeUnknown = INT(name='lightTruck-Vehicle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    lightTruck_Vehicle_TypeUnknown._val = 20
    
    #-----< lightTruck-Vehicle-TypeOther >-----#
    lightTruck_Vehicle_TypeOther = INT(name='lightTruck-Vehicle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    lightTruck_Vehicle_TypeOther._val = 21
    
    #-----< truck-Vehicle-TypeUnknown >-----#
    truck_Vehicle_TypeUnknown = INT(name='truck-Vehicle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_Vehicle_TypeUnknown._val = 25
    
    #-----< truck-Vehicle-TypeOther >-----#
    truck_Vehicle_TypeOther = INT(name='truck-Vehicle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_Vehicle_TypeOther._val = 26
    
    #-----< truck-axleCnt2 >-----#
    truck_axleCnt2 = INT(name='truck-axleCnt2', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt2._val = 27
    
    #-----< truck-axleCnt3 >-----#
    truck_axleCnt3 = INT(name='truck-axleCnt3', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt3._val = 28
    
    #-----< truck-axleCnt4 >-----#
    truck_axleCnt4 = INT(name='truck-axleCnt4', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt4._val = 29
    
    #-----< truck-axleCnt4Trailer >-----#
    truck_axleCnt4Trailer = INT(name='truck-axleCnt4Trailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt4Trailer._val = 30
    
    #-----< truck-axleCnt5Trailer >-----#
    truck_axleCnt5Trailer = INT(name='truck-axleCnt5Trailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt5Trailer._val = 31
    
    #-----< truck-axleCnt6Trailer >-----#
    truck_axleCnt6Trailer = INT(name='truck-axleCnt6Trailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt6Trailer._val = 32
    
    #-----< truck-axleCnt5MultiTrailer >-----#
    truck_axleCnt5MultiTrailer = INT(name='truck-axleCnt5MultiTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt5MultiTrailer._val = 33
    
    #-----< truck-axleCnt6MultiTrailer >-----#
    truck_axleCnt6MultiTrailer = INT(name='truck-axleCnt6MultiTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt6MultiTrailer._val = 34
    
    #-----< truck-axleCnt7MultiTrailer >-----#
    truck_axleCnt7MultiTrailer = INT(name='truck-axleCnt7MultiTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    truck_axleCnt7MultiTrailer._val = 35
    
    #-----< motorcycle-TypeUnknown >-----#
    motorcycle_TypeUnknown = INT(name='motorcycle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_TypeUnknown._val = 40
    
    #-----< motorcycle-TypeOther >-----#
    motorcycle_TypeOther = INT(name='motorcycle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_TypeOther._val = 41
    
    #-----< motorcycle-Cruiser-Standard >-----#
    motorcycle_Cruiser_Standard = INT(name='motorcycle-Cruiser-Standard', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_Cruiser_Standard._val = 42
    
    #-----< motorcycle-SportUnclad >-----#
    motorcycle_SportUnclad = INT(name='motorcycle-SportUnclad', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_SportUnclad._val = 43
    
    #-----< motorcycle-SportTouring >-----#
    motorcycle_SportTouring = INT(name='motorcycle-SportTouring', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_SportTouring._val = 44
    
    #-----< motorcycle-SuperSport >-----#
    motorcycle_SuperSport = INT(name='motorcycle-SuperSport', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_SuperSport._val = 45
    
    #-----< motorcycle-Touring >-----#
    motorcycle_Touring = INT(name='motorcycle-Touring', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_Touring._val = 46
    
    #-----< motorcycle-Trike >-----#
    motorcycle_Trike = INT(name='motorcycle-Trike', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_Trike._val = 47
    
    #-----< motorcycle-wPassengers >-----#
    motorcycle_wPassengers = INT(name='motorcycle-wPassengers', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    motorcycle_wPassengers._val = 48
    
    #-----< transit-TypeUnknown >-----#
    transit_TypeUnknown = INT(name='transit-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_TypeUnknown._val = 50
    
    #-----< transit-TypeOther >-----#
    transit_TypeOther = INT(name='transit-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_TypeOther._val = 51
    
    #-----< transit-BRT >-----#
    transit_BRT = INT(name='transit-BRT', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_BRT._val = 52
    
    #-----< transit-ExpressBus >-----#
    transit_ExpressBus = INT(name='transit-ExpressBus', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_ExpressBus._val = 53
    
    #-----< transit-LocalBus >-----#
    transit_LocalBus = INT(name='transit-LocalBus', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_LocalBus._val = 54
    
    #-----< transit-SchoolBus >-----#
    transit_SchoolBus = INT(name='transit-SchoolBus', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_SchoolBus._val = 55
    
    #-----< transit-FixedGuideway >-----#
    transit_FixedGuideway = INT(name='transit-FixedGuideway', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_FixedGuideway._val = 56
    
    #-----< transit-Paratransit >-----#
    transit_Paratransit = INT(name='transit-Paratransit', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_Paratransit._val = 57
    
    #-----< transit-Paratransit-Ambulance >-----#
    transit_Paratransit_Ambulance = INT(name='transit-Paratransit-Ambulance', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    transit_Paratransit_Ambulance._val = 58
    
    #-----< emergency-TypeUnknown >-----#
    emergency_TypeUnknown = INT(name='emergency-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_TypeUnknown._val = 60
    
    #-----< emergency-TypeOther >-----#
    emergency_TypeOther = INT(name='emergency-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_TypeOther._val = 61
    
    #-----< emergency-Fire-Light-Vehicle >-----#
    emergency_Fire_Light_Vehicle = INT(name='emergency-Fire-Light-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Fire_Light_Vehicle._val = 62
    
    #-----< emergency-Fire-Heavy-Vehicle >-----#
    emergency_Fire_Heavy_Vehicle = INT(name='emergency-Fire-Heavy-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Fire_Heavy_Vehicle._val = 63
    
    #-----< emergency-Fire-Paramedic-Vehicle >-----#
    emergency_Fire_Paramedic_Vehicle = INT(name='emergency-Fire-Paramedic-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Fire_Paramedic_Vehicle._val = 64
    
    #-----< emergency-Fire-Ambulance-Vehicle >-----#
    emergency_Fire_Ambulance_Vehicle = INT(name='emergency-Fire-Ambulance-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Fire_Ambulance_Vehicle._val = 65
    
    #-----< emergency-Police-Light-Vehicle >-----#
    emergency_Police_Light_Vehicle = INT(name='emergency-Police-Light-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Police_Light_Vehicle._val = 66
    
    #-----< emergency-Police-Heavy-Vehicle >-----#
    emergency_Police_Heavy_Vehicle = INT(name='emergency-Police-Heavy-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Police_Heavy_Vehicle._val = 67
    
    #-----< emergency-Other-Responder >-----#
    emergency_Other_Responder = INT(name='emergency-Other-Responder', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Other_Responder._val = 68
    
    #-----< emergency-Other-Ambulance >-----#
    emergency_Other_Ambulance = INT(name='emergency-Other-Ambulance', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    emergency_Other_Ambulance._val = 69
    
    #-----< otherTraveler-TypeUnknown >-----#
    otherTraveler_TypeUnknown = INT(name='otherTraveler-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_TypeUnknown._val = 80
    
    #-----< otherTraveler-TypeOther >-----#
    otherTraveler_TypeOther = INT(name='otherTraveler-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_TypeOther._val = 81
    
    #-----< otherTraveler-Pedestrian >-----#
    otherTraveler_Pedestrian = INT(name='otherTraveler-Pedestrian', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_Pedestrian._val = 82
    
    #-----< otherTraveler-Visually-Disabled >-----#
    otherTraveler_Visually_Disabled = INT(name='otherTraveler-Visually-Disabled', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_Visually_Disabled._val = 83
    
    #-----< otherTraveler-Physically-Disabled >-----#
    otherTraveler_Physically_Disabled = INT(name='otherTraveler-Physically-Disabled', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_Physically_Disabled._val = 84
    
    #-----< otherTraveler-Bicycle >-----#
    otherTraveler_Bicycle = INT(name='otherTraveler-Bicycle', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_Bicycle._val = 85
    
    #-----< otherTraveler-Vulnerable-Roadworker >-----#
    otherTraveler_Vulnerable_Roadworker = INT(name='otherTraveler-Vulnerable-Roadworker', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    otherTraveler_Vulnerable_Roadworker._val = 86
    
    #-----< infrastructure-TypeUnknown >-----#
    infrastructure_TypeUnknown = INT(name='infrastructure-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    infrastructure_TypeUnknown._val = 90
    
    #-----< infrastructure-Fixed >-----#
    infrastructure_Fixed = INT(name='infrastructure-Fixed', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    infrastructure_Fixed._val = 91
    
    #-----< infrastructure-Movable >-----#
    infrastructure_Movable = INT(name='infrastructure-Movable', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    infrastructure_Movable._val = 92
    
    #-----< equipped-CargoTrailer >-----#
    equipped_CargoTrailer = INT(name='equipped-CargoTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'BasicVehicleClass')))
    equipped_CargoTrailer._val = 93
    
    #-----< FuelType >-----#
    FuelType = INT(name='FuelType', mode=MODE_TYPE)
    FuelType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< unknownFuel >-----#
    unknownFuel = INT(name='unknownFuel', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    unknownFuel._val = 0
    
    #-----< gasoline >-----#
    gasoline = INT(name='gasoline', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    gasoline._val = 1
    
    #-----< ethanol >-----#
    ethanol = INT(name='ethanol', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    ethanol._val = 2
    
    #-----< diesel >-----#
    diesel = INT(name='diesel', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    diesel._val = 3
    
    #-----< electric >-----#
    electric = INT(name='electric', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    electric._val = 4
    
    #-----< hybrid >-----#
    hybrid = INT(name='hybrid', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    hybrid._val = 5
    
    #-----< hydrogen >-----#
    hydrogen = INT(name='hydrogen', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    hydrogen._val = 6
    
    #-----< natGasLiquid >-----#
    natGasLiquid = INT(name='natGasLiquid', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    natGasLiquid._val = 7
    
    #-----< natGasComp >-----#
    natGasComp = INT(name='natGasComp', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    natGasComp._val = 8
    
    #-----< propane >-----#
    propane = INT(name='propane', mode=MODE_VALUE, typeref=ASN1RefType(('MsgFrame', 'FuelType')))
    propane._val = 9
    
    #-----< VehicleEmergencyExtensions >-----#
    VehicleEmergencyExtensions = SEQ(name='VehicleEmergencyExtensions', mode=MODE_TYPE)
    _VehicleEmergencyExtensions_responseType = ENUM(name='responseType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ResponseType')), opt=True)
    _VehicleEmergencyExtensions_sirenUse = ENUM(name='sirenUse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'SirenInUse')), opt=True)
    _VehicleEmergencyExtensions_lightsUse = ENUM(name='lightsUse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'LightbarInUse')), opt=True)
    VehicleEmergencyExtensions._cont = ASN1Dict([
        ('responseType', _VehicleEmergencyExtensions_responseType),
        ('sirenUse', _VehicleEmergencyExtensions_sirenUse),
        ('lightsUse', _VehicleEmergencyExtensions_lightsUse),
        ])
    VehicleEmergencyExtensions._ext = []
    
    #-----< ResponseType >-----#
    ResponseType = ENUM(name='ResponseType', mode=MODE_TYPE)
    ResponseType._cont = ASN1Dict([('notInUseOrNotEquipped', 0), ('emergency', 1), ('nonEmergency', 2), ('pursuit', 3), ('stationary', 4), ('slowMoving', 5), ('stopAndGoMovement', 6)])
    ResponseType._ext = []
    
    #-----< SirenInUse >-----#
    SirenInUse = ENUM(name='SirenInUse', mode=MODE_TYPE)
    SirenInUse._cont = ASN1Dict([('unavailable', 0), ('notInUse', 1), ('inUse', 2), ('reserved', 3)])
    SirenInUse._ext = None
    
    #-----< LightbarInUse >-----#
    LightbarInUse = ENUM(name='LightbarInUse', mode=MODE_TYPE)
    LightbarInUse._cont = ASN1Dict([('unavailable', 0), ('notInUse', 1), ('inUse', 2), ('yellowCautionLights', 3), ('schooldBusLights', 4), ('arrowSignsActive', 5), ('slowMovingVehicle', 6), ('freqStops', 7)])
    LightbarInUse._ext = None
    
    #-----< VehicleSafetyExtensions >-----#
    VehicleSafetyExtensions = SEQ(name='VehicleSafetyExtensions', mode=MODE_TYPE)
    _VehicleSafetyExtensions_events = BIT_STR(name='events', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleEventFlags')), opt=True)
    _VehicleSafetyExtensions_pathHistory = SEQ(name='pathHistory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PathHistory')), opt=True)
    _VehicleSafetyExtensions_pathPrediction = SEQ(name='pathPrediction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PathPrediction')), opt=True)
    _VehicleSafetyExtensions_lights = BIT_STR(name='lights', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'ExteriorLights')), opt=True)
    VehicleSafetyExtensions._cont = ASN1Dict([
        ('events', _VehicleSafetyExtensions_events),
        ('pathHistory', _VehicleSafetyExtensions_pathHistory),
        ('pathPrediction', _VehicleSafetyExtensions_pathPrediction),
        ('lights', _VehicleSafetyExtensions_lights),
        ])
    VehicleSafetyExtensions._ext = []
    
    #-----< PathHistory >-----#
    PathHistory = SEQ(name='PathHistory', mode=MODE_TYPE)
    _PathHistory_initialPosition = SEQ(name='initialPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'FullPositionVector')), opt=True)
    _PathHistory_currGNSSstatus = BIT_STR(name='currGNSSstatus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'GNSSstatus')), opt=True)
    _PathHistory_crumbData = SEQ_OF(name='crumbData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PathHistoryPointList')))
    PathHistory._cont = ASN1Dict([
        ('initialPosition', _PathHistory_initialPosition),
        ('currGNSSstatus', _PathHistory_currGNSSstatus),
        ('crumbData', _PathHistory_crumbData),
        ])
    PathHistory._ext = []
    
    #-----< FullPositionVector >-----#
    FullPositionVector = SEQ(name='FullPositionVector', mode=MODE_TYPE)
    _FullPositionVector_utcTime = SEQ(name='utcTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'DDateTime')), opt=True)
    _FullPositionVector_pos = SEQ(name='pos', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Position3D')))
    _FullPositionVector_heading = INT(name='heading', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Heading')), opt=True)
    _FullPositionVector_transmission = ENUM(name='transmission', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TransmissionState')), opt=True)
    _FullPositionVector_speed = INT(name='speed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Speed')), opt=True)
    _FullPositionVector_posAccuracy = SEQ(name='posAccuracy', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionConfidenceSet')), opt=True)
    _FullPositionVector_timeConfidence = ENUM(name='timeConfidence', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeConfidence')), opt=True)
    _FullPositionVector_motionCfd = SEQ(name='motionCfd', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'MotionConfidenceSet')), opt=True)
    FullPositionVector._cont = ASN1Dict([
        ('utcTime', _FullPositionVector_utcTime),
        ('pos', _FullPositionVector_pos),
        ('heading', _FullPositionVector_heading),
        ('transmission', _FullPositionVector_transmission),
        ('speed', _FullPositionVector_speed),
        ('posAccuracy', _FullPositionVector_posAccuracy),
        ('timeConfidence', _FullPositionVector_timeConfidence),
        ('motionCfd', _FullPositionVector_motionCfd),
        ])
    FullPositionVector._ext = []
    
    #-----< GNSSstatus >-----#
    GNSSstatus = BIT_STR(name='GNSSstatus', mode=MODE_TYPE)
    GNSSstatus._cont = ASN1Dict([('unavailable', 0), ('isHealthy', 1), ('isMonitored', 2), ('baseStationType', 3), ('aPDOPofUnder5', 4), ('inViewOfUnder5', 5), ('localCorrectionsPresent', 6), ('networkCorrectionsPresent', 7)])
    GNSSstatus._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< PathHistoryPointList >-----#
    PathHistoryPointList = SEQ_OF(name='PathHistoryPointList', mode=MODE_TYPE)
    _PathHistoryPointList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('MsgFrame', 'PathHistoryPoint')))
    PathHistoryPointList._cont = _PathHistoryPointList__item_
    PathHistoryPointList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    
    #-----< PathHistoryPoint >-----#
    PathHistoryPoint = SEQ(name='PathHistoryPoint', mode=MODE_TYPE)
    _PathHistoryPoint_llvOffset = SEQ(name='llvOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionOffsetLLV')))
    _PathHistoryPoint_timeOffset = INT(name='timeOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'TimeOffset')))
    _PathHistoryPoint_speed = INT(name='speed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Speed')), opt=True)
    _PathHistoryPoint_posAccuracy = SEQ(name='posAccuracy', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'PositionConfidenceSet')), opt=True)
    _PathHistoryPoint_heading = INT(name='heading', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'CoarseHeading')), opt=True)
    PathHistoryPoint._cont = ASN1Dict([
        ('llvOffset', _PathHistoryPoint_llvOffset),
        ('timeOffset', _PathHistoryPoint_timeOffset),
        ('speed', _PathHistoryPoint_speed),
        ('posAccuracy', _PathHistoryPoint_posAccuracy),
        ('heading', _PathHistoryPoint_heading),
        ])
    PathHistoryPoint._ext = []
    
    #-----< PathPrediction >-----#
    PathPrediction = SEQ(name='PathPrediction', mode=MODE_TYPE)
    _PathPrediction_radiusOfCurve = INT(name='radiusOfCurve', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'RadiusOfCurvature')))
    _PathPrediction_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'Confidence')))
    PathPrediction._cont = ASN1Dict([
        ('radiusOfCurve', _PathPrediction_radiusOfCurve),
        ('confidence', _PathPrediction_confidence),
        ])
    PathPrediction._ext = []
    
    #-----< Confidence >-----#
    Confidence = INT(name='Confidence', mode=MODE_TYPE)
    Confidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=200)], ev=None, er=[])
    
    #-----< RadiusOfCurvature >-----#
    RadiusOfCurvature = INT(name='RadiusOfCurvature', mode=MODE_TYPE)
    RadiusOfCurvature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    
    #-----< VehicleSize >-----#
    VehicleSize = SEQ(name='VehicleSize', mode=MODE_TYPE)
    _VehicleSize_width = INT(name='width', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleWidth')))
    _VehicleSize_length = INT(name='length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleLength')))
    _VehicleSize_height = INT(name='height', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('MsgFrame', 'VehicleHeight')), opt=True)
    VehicleSize._cont = ASN1Dict([
        ('width', _VehicleSize_width),
        ('length', _VehicleSize_length),
        ('height', _VehicleSize_height),
        ])
    VehicleSize._ext = None
    
    #-----< VehicleWidth >-----#
    VehicleWidth = INT(name='VehicleWidth', mode=MODE_TYPE)
    VehicleWidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< VehicleLength >-----#
    VehicleLength = INT(name='VehicleLength', mode=MODE_TYPE)
    VehicleLength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< VehicleHeight >-----#
    VehicleHeight = INT(name='VehicleHeight', mode=MODE_TYPE)
    VehicleHeight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< TransmissionState >-----#
    TransmissionState = ENUM(name='TransmissionState', mode=MODE_TYPE)
    TransmissionState._cont = ASN1Dict([('neutral', 0), ('park', 1), ('forwardGears', 2), ('reverseGears', 3), ('reserved1', 4), ('reserved2', 5), ('reserved3', 6), ('unavailable', 7)])
    TransmissionState._ext = None
    
    #-----< VehicleEventFlags >-----#
    VehicleEventFlags = BIT_STR(name='VehicleEventFlags', mode=MODE_TYPE)
    VehicleEventFlags._cont = ASN1Dict([('eventHazardLights', 0), ('eventStopLineViolation', 1), ('eventABSactivated', 2), ('eventTractionControlLoss', 3), ('eventStabilityControlactivated', 4), ('eventHazardousMaterials', 5), ('eventReserved1', 6), ('eventHardBraking', 7), ('eventLightsChanged', 8), ('eventWipersChanged', 9), ('eventFlatTire', 10), ('eventDisabledVehicle', 11), ('eventAirBagDeployment', 12)])
    VehicleEventFlags._const_sz = ASN1Set(rv=[13], rr=[], ev=[], er=[])
    
    #-----< ExteriorLights >-----#
    ExteriorLights = BIT_STR(name='ExteriorLights', mode=MODE_TYPE)
    ExteriorLights._cont = ASN1Dict([('lowBeamHeadlightsOn', 0), ('highBeamHeadlightsOn', 1), ('leftTurnSignalOn', 2), ('rightTurnSignalOn', 3), ('hazardSignalOn', 4), ('automaticLightControlOn', 5), ('daytimeRunningLightsOn', 6), ('fogLightOn', 7), ('parkingLightsOn', 8)])
    ExteriorLights._const_sz = ASN1Set(rv=[9], rr=[], ev=[], er=[])
    
    _all_ = [
        _MessageFrame_bsmFrame,
        _MessageFrame_mapFrame,
        _MessageFrame_rsmFrame,
        _MessageFrame_spatFrame,
        _MessageFrame_rsiFrame,
        MessageFrame,
        _BasicSafetyMessage_msgCnt,
        _BasicSafetyMessage_id,
        _BasicSafetyMessage_secMark,
        _BasicSafetyMessage_timeConfidence,
        _BasicSafetyMessage_pos,
        _BasicSafetyMessage_posAccuracy,
        _BasicSafetyMessage_posConfidence,
        _BasicSafetyMessage_transmission,
        _BasicSafetyMessage_speed,
        _BasicSafetyMessage_heading,
        _BasicSafetyMessage_angle,
        _BasicSafetyMessage_motionCfd,
        _BasicSafetyMessage_accelSet,
        _BasicSafetyMessage_brakes,
        _BasicSafetyMessage_size,
        _BasicSafetyMessage_vehicleClass,
        _BasicSafetyMessage_safetyExt,
        _BasicSafetyMessage_emergencyExt,
        BasicSafetyMessage,
        MsgCount,
        _AccelerationSet4Way_long,
        _AccelerationSet4Way_lat,
        _AccelerationSet4Way_vert,
        _AccelerationSet4Way_yaw,
        AccelerationSet4Way,
        Acceleration,
        VerticalAcceleration,
        YawRate,
        Speed,
        Heading,
        CoarseHeading,
        SteeringWheelAngle,
        _MotionConfidenceSet_speedCfd,
        _MotionConfidenceSet_headingCfd,
        _MotionConfidenceSet_steerCfd,
        MotionConfidenceSet,
        HeadingConfidence,
        SpeedConfidence,
        SteeringWheelAngleConfidence,
        Latitude,
        Longitude,
        Elevation,
        _PositionConfidenceSet_pos,
        _PositionConfidenceSet_elevation,
        PositionConfidenceSet,
        PositionConfidence,
        ElevationConfidence,
        _Position3D_lat,
        _Position3D_long,
        _Position3D_elevation,
        Position3D,
        SemiMajorAxisAccuracy,
        SemiMinorAxisAccuracy,
        SemiMajorAxisOrientation,
        _PositionalAccuracy_semiMajor,
        _PositionalAccuracy_semiMinor,
        _PositionalAccuracy_orientation,
        PositionalAccuracy,
        _PositionOffsetLLV_offsetLL,
        _PositionOffsetLLV_offsetV,
        PositionOffsetLLV,
        OffsetLL_B12,
        OffsetLL_B14,
        OffsetLL_B16,
        OffsetLL_B18,
        OffsetLL_B22,
        OffsetLL_B24,
        _Position_LL_24B_lon,
        _Position_LL_24B_lat,
        Position_LL_24B,
        _Position_LL_28B_lon,
        _Position_LL_28B_lat,
        Position_LL_28B,
        _Position_LL_32B_lon,
        _Position_LL_32B_lat,
        Position_LL_32B,
        _Position_LL_36B_lon,
        _Position_LL_36B_lat,
        Position_LL_36B,
        _Position_LL_44B_lon,
        _Position_LL_44B_lat,
        Position_LL_44B,
        _Position_LL_48B_lon,
        _Position_LL_48B_lat,
        Position_LL_48B,
        _Position_LLmD_64b_lon,
        _Position_LLmD_64b_lat,
        Position_LLmD_64b,
        _PositionOffsetLL_position_LL1,
        _PositionOffsetLL_position_LL2,
        _PositionOffsetLL_position_LL3,
        _PositionOffsetLL_position_LL4,
        _PositionOffsetLL_position_LL5,
        _PositionOffsetLL_position_LL6,
        _PositionOffsetLL_position_LatLon,
        PositionOffsetLL,
        _VerticalOffset_offset1,
        _VerticalOffset_offset2,
        _VerticalOffset_offset3,
        _VerticalOffset_offset4,
        _VerticalOffset_offset5,
        _VerticalOffset_offset6,
        _VerticalOffset_elevation,
        VerticalOffset,
        VertOffset_B07,
        VertOffset_B08,
        VertOffset_B09,
        VertOffset_B10,
        VertOffset_B11,
        VertOffset_B12,
        DSecond,
        DYear,
        DMonth,
        DDay,
        DHour,
        DMinute,
        DTimeOffset,
        _DDateTime_year,
        _DDateTime_month,
        _DDateTime_day,
        _DDateTime_hour,
        _DDateTime_minute,
        _DDateTime_second,
        _DDateTime_offset,
        DDateTime,
        MinuteOfTheYear,
        TimeMark,
        TimeOffset,
        TimeConfidence,
        _MapData_msgCnt,
        _MapData_timeStamp,
        _MapData_nodes,
        MapData,
        _LaneList__item_,
        LaneList,
        _Lane_laneID,
        _Lane_laneWidth,
        _Lane_laneAttributes,
        _Lane_maneuvers,
        _Lane_connectsTo,
        _Lane_speedLimits,
        _Lane_points,
        Lane,
        LaneID,
        LaneWidth,
        _ConnectsToList__item_,
        ConnectsToList,
        _Connection_remoteIntersection,
        _Connection_connectingLane,
        _Connection_phaseId,
        Connection,
        _ConnectingLane_lane,
        _ConnectingLane_maneuver,
        ConnectingLane,
        AllowedManeuvers,
        _LaneAttributes_shareWith,
        _LaneAttributes_laneType,
        LaneAttributes,
        LaneSharing,
        _LaneTypeAttributes_vehicle,
        _LaneTypeAttributes_crosswalk,
        _LaneTypeAttributes_bikeLane,
        _LaneTypeAttributes_sidewalk,
        _LaneTypeAttributes_median,
        _LaneTypeAttributes_striping,
        _LaneTypeAttributes_trackedVehicle,
        _LaneTypeAttributes_parking,
        LaneTypeAttributes,
        LaneAttributes_Vehicle,
        LaneAttributes_Crosswalk,
        LaneAttributes_Bike,
        LaneAttributes_Sidewalk,
        LaneAttributes_Barrier,
        LaneAttributes_Striping,
        LaneAttributes_TrackedVehicle,
        LaneAttributes_Parking,
        _LinkList__item_,
        LinkList,
        _Link_name,
        _Link_upstreamNodeId,
        _Link_speedLimits,
        _Link_linkWidth,
        _Link_points,
        _Link_movements,
        _Link_lanes,
        Link,
        _MovementList__item_,
        MovementList,
        _Movement_remoteIntersection,
        _Movement_phaseId,
        Movement,
        _NodeList__item_,
        NodeList,
        _Node_name,
        _Node_id,
        _Node_refPos,
        _Node_inLinks,
        Node,
        DescriptiveName,
        _NodeReferenceID_region,
        _NodeReferenceID_id,
        NodeReferenceID,
        RoadRegulatorID,
        NodeID,
        _PointList__item_,
        PointList,
        _RoadPoint_posOffset,
        RoadPoint,
        _SpeedLimitList__item_,
        SpeedLimitList,
        _RegulatorySpeedLimit_type,
        _RegulatorySpeedLimit_speed,
        RegulatorySpeedLimit,
        SpeedLimitType,
        _RoadSideInformation_msgCnt,
        _RoadSideInformation_moy,
        _RoadSideInformation_id,
        _RoadSideInformation_refPos,
        _RoadSideInformation_rtes,
        _RoadSideInformation_rtss,
        RoadSideInformation,
        _RTEList__item_,
        RTEList,
        _RTEData_rteId,
        _RTEData_eventType,
        _RTEData_eventSource,
        _RTEData_eventPos,
        _RTEData_eventRadius,
        _RTEData_description,
        _RTEData_timeDetails,
        _RTEData_priority,
        _RTEData_referencePaths,
        _RTEData_referenceLinks,
        _RTEData_eventConfidence,
        RTEData,
        EventSource,
        EventType,
        _RSITimeDetails_startTime,
        _RSITimeDetails_endTime,
        _RSITimeDetails_endTimeConfidence,
        RSITimeDetails,
        _ReferencePathList__item_,
        ReferencePathList,
        _ReferencePath_activePath,
        _ReferencePath_pathRadius,
        ReferencePath,
        _RTSList__item_,
        RTSList,
        _RTSData_rtsId,
        _RTSData_signType,
        _RTSData_signPos,
        _RTSData_description,
        _RTSData_timeDetails,
        _RTSData_priority,
        _RTSData_referencePaths,
        _RTSData_referenceLinks,
        RTSData,
        _Description_textString,
        _Description_textGB2312,
        Description,
        _ReferenceLinkList__item_,
        ReferenceLinkList,
        _ReferenceLink_upstreamNodeId,
        _ReferenceLink_downstreamNodeId,
        _ReferenceLink_referenceLanes,
        ReferenceLink,
        ReferenceLanes,
        SignType,
        _PathPointList__item_,
        PathPointList,
        Radius,
        RSIPriority,
        _RoadsideSafetyMessage_msgCnt,
        _RoadsideSafetyMessage_id,
        _RoadsideSafetyMessage_refPos,
        _RoadsideSafetyMessage_participants,
        RoadsideSafetyMessage,
        _ParticipantList__item_,
        ParticipantList,
        _ParticipantData_ptcType,
        _ParticipantData_ptcId,
        _ParticipantData_source,
        _ParticipantData_id,
        _ParticipantData_secMark,
        _ParticipantData_pos,
        _ParticipantData_posConfidence,
        _ParticipantData_transmission,
        _ParticipantData_speed,
        _ParticipantData_heading,
        _ParticipantData_angle,
        _ParticipantData_motionCfd,
        _ParticipantData_accelSet,
        _ParticipantData_size,
        _ParticipantData_vehicleClass,
        ParticipantData,
        ParticipantType,
        SourceType,
        _SPAT_msgCnt,
        _SPAT_moy,
        _SPAT_timeStamp,
        _SPAT_name,
        _SPAT_intersections,
        SPAT,
        _IntersectionStateList__item_,
        IntersectionStateList,
        _IntersectionState_intersectionId,
        _IntersectionState_status,
        _IntersectionState_moy,
        _IntersectionState_timeStamp,
        _IntersectionState_timeConfidence,
        _IntersectionState_phases,
        IntersectionState,
        IntersectionStatusObject,
        _PhaseList__item_,
        PhaseList,
        _Phase_id,
        _Phase_phaseStates,
        Phase,
        _PhaseStateList__item_,
        PhaseStateList,
        _PhaseState_light,
        _PhaseState_timing,
        PhaseState,
        LightState,
        _TimeChangeDetails_counting,
        _TimeChangeDetails_utcTiming,
        TimeChangeDetails,
        _UTCTiming_startUTCTime,
        _UTCTiming_minEndUTCTime,
        _UTCTiming_maxEndUTCTime,
        _UTCTiming_likelyEndUTCTime,
        _UTCTiming_timeConfidence,
        _UTCTiming_nextStartUTCTime,
        _UTCTiming_nextEndUTCTime,
        UTCTiming,
        _TimeCountingDown_startTime,
        _TimeCountingDown_minEndTime,
        _TimeCountingDown_maxEndTime,
        _TimeCountingDown_likelyEndTime,
        _TimeCountingDown_timeConfidence,
        _TimeCountingDown_nextStartTime,
        _TimeCountingDown_nextDuration,
        TimeCountingDown,
        PhaseID,
        _BrakeSystemStatus_brakePadel,
        _BrakeSystemStatus_wheelBrakes,
        _BrakeSystemStatus_traction,
        _BrakeSystemStatus_abs,
        _BrakeSystemStatus_scs,
        _BrakeSystemStatus_brakeBoost,
        _BrakeSystemStatus_auxBrakes,
        BrakeSystemStatus,
        BrakePedalStatus,
        BrakeAppliedStatus,
        BrakeBoostApplied,
        TractionControlStatus,
        AntiLockBrakeStatus,
        StabilityControlStatus,
        AuxiliaryBrakeStatus,
        _VehicleClassification_classification,
        _VehicleClassification_fuelType,
        VehicleClassification,
        BasicVehicleClass,
        unknownVehicleClass,
        specialVehicleClass,
        passenger_Vehicle_TypeUnknown,
        passenger_Vehicle_TypeOther,
        lightTruck_Vehicle_TypeUnknown,
        lightTruck_Vehicle_TypeOther,
        truck_Vehicle_TypeUnknown,
        truck_Vehicle_TypeOther,
        truck_axleCnt2,
        truck_axleCnt3,
        truck_axleCnt4,
        truck_axleCnt4Trailer,
        truck_axleCnt5Trailer,
        truck_axleCnt6Trailer,
        truck_axleCnt5MultiTrailer,
        truck_axleCnt6MultiTrailer,
        truck_axleCnt7MultiTrailer,
        motorcycle_TypeUnknown,
        motorcycle_TypeOther,
        motorcycle_Cruiser_Standard,
        motorcycle_SportUnclad,
        motorcycle_SportTouring,
        motorcycle_SuperSport,
        motorcycle_Touring,
        motorcycle_Trike,
        motorcycle_wPassengers,
        transit_TypeUnknown,
        transit_TypeOther,
        transit_BRT,
        transit_ExpressBus,
        transit_LocalBus,
        transit_SchoolBus,
        transit_FixedGuideway,
        transit_Paratransit,
        transit_Paratransit_Ambulance,
        emergency_TypeUnknown,
        emergency_TypeOther,
        emergency_Fire_Light_Vehicle,
        emergency_Fire_Heavy_Vehicle,
        emergency_Fire_Paramedic_Vehicle,
        emergency_Fire_Ambulance_Vehicle,
        emergency_Police_Light_Vehicle,
        emergency_Police_Heavy_Vehicle,
        emergency_Other_Responder,
        emergency_Other_Ambulance,
        otherTraveler_TypeUnknown,
        otherTraveler_TypeOther,
        otherTraveler_Pedestrian,
        otherTraveler_Visually_Disabled,
        otherTraveler_Physically_Disabled,
        otherTraveler_Bicycle,
        otherTraveler_Vulnerable_Roadworker,
        infrastructure_TypeUnknown,
        infrastructure_Fixed,
        infrastructure_Movable,
        equipped_CargoTrailer,
        FuelType,
        unknownFuel,
        gasoline,
        ethanol,
        diesel,
        electric,
        hybrid,
        hydrogen,
        natGasLiquid,
        natGasComp,
        propane,
        _VehicleEmergencyExtensions_responseType,
        _VehicleEmergencyExtensions_sirenUse,
        _VehicleEmergencyExtensions_lightsUse,
        VehicleEmergencyExtensions,
        ResponseType,
        SirenInUse,
        LightbarInUse,
        _VehicleSafetyExtensions_events,
        _VehicleSafetyExtensions_pathHistory,
        _VehicleSafetyExtensions_pathPrediction,
        _VehicleSafetyExtensions_lights,
        VehicleSafetyExtensions,
        _PathHistory_initialPosition,
        _PathHistory_currGNSSstatus,
        _PathHistory_crumbData,
        PathHistory,
        _FullPositionVector_utcTime,
        _FullPositionVector_pos,
        _FullPositionVector_heading,
        _FullPositionVector_transmission,
        _FullPositionVector_speed,
        _FullPositionVector_posAccuracy,
        _FullPositionVector_timeConfidence,
        _FullPositionVector_motionCfd,
        FullPositionVector,
        GNSSstatus,
        _PathHistoryPointList__item_,
        PathHistoryPointList,
        _PathHistoryPoint_llvOffset,
        _PathHistoryPoint_timeOffset,
        _PathHistoryPoint_speed,
        _PathHistoryPoint_posAccuracy,
        _PathHistoryPoint_heading,
        PathHistoryPoint,
        _PathPrediction_radiusOfCurve,
        _PathPrediction_confidence,
        PathPrediction,
        Confidence,
        RadiusOfCurvature,
        _VehicleSize_width,
        _VehicleSize_length,
        _VehicleSize_height,
        VehicleSize,
        VehicleWidth,
        VehicleLength,
        VehicleHeight,
        TransmissionState,
        VehicleEventFlags,
        ExteriorLights,
    ]

init_modules(MsgFrame)
